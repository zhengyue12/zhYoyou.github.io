<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>geateway启动报错 org.springframework.http.codec.ServerCodecConfigurer that could not be found</title>
    <url>/2020/06/03/geateway%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99-org-springframework-http-codec-ServerCodecConfigurer-that-could-not-be-found/</url>
    <content><![CDATA[<h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><h4 id="gateway启动时报错：Parameter-0-of-method-modifyResponseBodyGatewayFilterFactory-in-org-springframework-cloud-gateway-config-GatewayAutoConfiguration-required-a-bean-of-type-‘org-springframework-http-codec-ServerCodecConfigurer’-that-could-not-be-found"><a href="#gateway启动时报错：Parameter-0-of-method-modifyResponseBodyGatewayFilterFactory-in-org-springframework-cloud-gateway-config-GatewayAutoConfiguration-required-a-bean-of-type-‘org-springframework-http-codec-ServerCodecConfigurer’-that-could-not-be-found" class="headerlink" title="gateway启动时报错：Parameter 0 of method modifyResponseBodyGatewayFilterFactory in org.springframework.cloud.gateway.config.GatewayAutoConfiguration required a bean of type ‘org.springframework.http.codec.ServerCodecConfigurer’ that could not be found."></a>gateway启动时报错：Parameter 0 of method modifyResponseBodyGatewayFilterFactory in org.springframework.cloud.gateway.config.GatewayAutoConfiguration required a bean of type ‘org.springframework.http.codec.ServerCodecConfigurer’ that could not be found.</h4><a id="more"></a>
<h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><h4 id="因为gateway的底层是webflux，和springboot的web依赖只能存在一个"><a href="#因为gateway的底层是webflux，和springboot的web依赖只能存在一个" class="headerlink" title="因为gateway的底层是webflux，和springboot的web依赖只能存在一个"></a>因为gateway的底层是webflux，和springboot的web依赖只能存在一个</h4><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><h4 id="删除springboot-web模块的依赖"><a href="#删除springboot-web模块的依赖" class="headerlink" title="删除springboot web模块的依赖"></a>删除springboot web模块的依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringCloud</tag>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot+Webmagic+Redis+Docker定时爬取数据</title>
    <url>/2020/05/18/SpringBoot-Webmagic-Redis%E5%AE%9A%E6%97%B6%E7%88%AC%E5%8F%96%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h2 id="项目说明："><a href="#项目说明：" class="headerlink" title="项目说明："></a>项目说明：</h2><h4 id="emsp-emsp-本demo主要是基于springboot基础框架，在指定时间优先判断是否已存在指定Key值的数据，存在则删除，再通过webmagic技术爬取官网上的新闻数据，通过Redis的set（集合）数据类型进行去重处理存入Redis中。最后打包成镜像发布至Docker；"><a href="#emsp-emsp-本demo主要是基于springboot基础框架，在指定时间优先判断是否已存在指定Key值的数据，存在则删除，再通过webmagic技术爬取官网上的新闻数据，通过Redis的set（集合）数据类型进行去重处理存入Redis中。最后打包成镜像发布至Docker；" class="headerlink" title="&emsp; &emsp;本demo主要是基于springboot基础框架，在指定时间优先判断是否已存在指定Key值的数据，存在则删除，再通过webmagic技术爬取官网上的新闻数据，通过Redis的set（集合）数据类型进行去重处理存入Redis中。最后打包成镜像发布至Docker；"></a>&emsp; &emsp;本demo主要是基于springboot基础框架，在指定时间优先判断是否已存在指定Key值的数据，存在则删除，再通过webmagic技术爬取官网上的新闻数据，通过Redis的set（集合）数据类型进行去重处理存入Redis中。最后打包成镜像发布至Docker；</h4><h2 id="技术栈："><a href="#技术栈：" class="headerlink" title="技术栈："></a>技术栈：</h2><table>
<thead>
<tr>
<th align="center">技术</th>
<th align="center">说明</th>
<th align="center">链接</th>
</tr>
</thead>
<tbody><tr>
<td align="center">SpringBoot</td>
<td align="center">基础框架</td>
<td align="center"><a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener">https://spring.io/projects/spring-boot</a></td>
</tr>
<tr>
<td align="center">Webmagic</td>
<td align="center">基于Java开发的爬虫框架</td>
<td align="center"><a href="http://webmagic.io/" target="_blank" rel="noopener">http://webmagic.io/</a></td>
</tr>
<tr>
<td align="center">Reids</td>
<td align="center">基于内存的Key-Value数据库</td>
<td align="center"><a href="https://redis.io/" target="_blank" rel="noopener">https://redis.io/</a></td>
</tr>
<tr>
<td align="center">Lombok</td>
<td align="center">自动接通你的编辑器和构建工具的Java库</td>
<td align="center"><a href="https://projectlombok.org/" target="_blank" rel="noopener">https://projectlombok.org/</a></td>
</tr>
<tr>
<td align="center">Docker</td>
<td align="center">开源应用容器引擎</td>
<td align="center"><a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a></td>
</tr>
</tbody></table>
<a id="more"></a>
<h2 id="前期准备："><a href="#前期准备：" class="headerlink" title="前期准备："></a>前期准备：</h2><h4 id="emsp-emsp-安装Docker，运行Redis容器。对Docker不熟悉的可以查看Docker基本命令-一-、Docker基本命令-二-。"><a href="#emsp-emsp-安装Docker，运行Redis容器。对Docker不熟悉的可以查看Docker基本命令-一-、Docker基本命令-二-。" class="headerlink" title="&emsp;&emsp;安装Docker，运行Redis容器。对Docker不熟悉的可以查看Docker基本命令(一)、Docker基本命令(二)。"></a>&emsp;&emsp;安装Docker，运行Redis容器。对Docker不熟悉的可以查看<a href="https://zhengyue12.github.io/2019/11/30/Docker基本命令%EF%BC%88一%EF%BC%89/">Docker基本命令(一)</a>、<a href="https://zhengyue12.github.io/2020/05/16/Docker基本命令%EF%BC%88二%EF%BC%89/">Docker基本命令(二)</a>。</h4><h2 id="相关依赖："><a href="#相关依赖：" class="headerlink" title="相关依赖："></a>相关依赖：</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>us.codecraft<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>webmagic-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.7.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>us.codecraft<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>webmagic-extension<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.7.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="搭建流程："><a href="#搭建流程：" class="headerlink" title="搭建流程："></a>搭建流程：</h2><h4 id="emsp-emsp-1-编辑配置文件application-yml"><a href="#emsp-emsp-1-编辑配置文件application-yml" class="headerlink" title="&emsp;&emsp;1.编辑配置文件application.yml"></a>&emsp;&emsp;1.编辑配置文件application.yml</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">    host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-2-新建爬虫模块实体类，并实现序列化。如果不实现序列化，是无法存入Redis中。"><a href="#emsp-emsp-2-新建爬虫模块实体类，并实现序列化。如果不实现序列化，是无法存入Redis中。" class="headerlink" title="&emsp;&emsp;2.新建爬虫模块实体类，并实现序列化。如果不实现序列化，是无法存入Redis中。"></a>&emsp;&emsp;2.新建爬虫模块实体类，并实现序列化。如果不实现序列化，是无法存入Redis中。</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">News</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * url地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 题目</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 来源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String source;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发布日期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String releaseDate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浏览量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String pageViews;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-3-编写爬虫执行类，这里先看一下Webmagic的总体架构图。"><a href="#emsp-emsp-3-编写爬虫执行类，这里先看一下Webmagic的总体架构图。" class="headerlink" title="&emsp;&emsp;3.编写爬虫执行类，这里先看一下Webmagic的总体架构图。"></a>&emsp;&emsp;3.编写爬虫执行类，这里先看一下Webmagic的总体架构图。</h4><p><img src="/images/Java/4.png" alt="Yoyou"></p>
<h4 id="emsp-emsp-开始编写执行类，这里需要实现PageProcesser接口的process方法和getSite方法。process方法主要是做一些页面的收集，在此你需要先找到详情类地址和列表页地址的区别，建议使用正则表达式匹配，详情页获取具体的数据可以使用css、xpath、正则等表达式进行匹配，这里建议每写一条语句都进行一次Debug，以确保数据的准确性。最后通过page属性的putField-Key-Value-方法暂存。执行方法中配置线程、数据处理类型等信息。这里注意类上记得加上-Component等注解将该类添加进Spring容器！！"><a href="#emsp-emsp-开始编写执行类，这里需要实现PageProcesser接口的process方法和getSite方法。process方法主要是做一些页面的收集，在此你需要先找到详情类地址和列表页地址的区别，建议使用正则表达式匹配，详情页获取具体的数据可以使用css、xpath、正则等表达式进行匹配，这里建议每写一条语句都进行一次Debug，以确保数据的准确性。最后通过page属性的putField-Key-Value-方法暂存。执行方法中配置线程、数据处理类型等信息。这里注意类上记得加上-Component等注解将该类添加进Spring容器！！" class="headerlink" title="&emsp;&emsp;开始编写执行类，这里需要实现PageProcesser接口的process方法和getSite方法。process方法主要是做一些页面的收集，在此你需要先找到详情类地址和列表页地址的区别，建议使用正则表达式匹配，详情页获取具体的数据可以使用css、xpath、正则等表达式进行匹配，这里建议每写一条语句都进行一次Debug，以确保数据的准确性。最后通过page属性的putField(Key, Value);方法暂存。执行方法中配置线程、数据处理类型等信息。这里注意类上记得加上@Component等注解将该类添加进Spring容器！！"></a>&emsp;&emsp;开始编写执行类，这里需要实现PageProcesser接口的process方法和getSite方法。process方法主要是做一些页面的收集，在此你需要先找到详情类地址和列表页地址的区别，建议使用正则表达式匹配，详情页获取具体的数据可以使用css、xpath、正则等表达式进行匹配，这里建议每写一条语句都进行一次Debug，以确保数据的准确性。最后通过page属性的putField(Key, Value);方法暂存。执行方法中配置线程、数据处理类型等信息。这里注意类上记得加上@Component等注解将该类添加进Spring容器！！</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsProcesser</span> <span class="keyword">implements</span> <span class="title">PageProcessor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"https://www.jhc.cn/"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisPipeline redisPipeline;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(Page page)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!page.getUrl().toString().contains(<span class="string">"page.htm"</span>)) &#123;</span><br><span class="line">                page.addTargetRequests(page.getHtml().xpath(<span class="string">"//li[@class='news-item']"</span>).links().all());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                News newInfo = <span class="keyword">new</span> News();</span><br><span class="line">                String url = page.getUrl().toString();</span><br><span class="line">                newInfo.setUrl(url);</span><br><span class="line"></span><br><span class="line">                String title = page.getHtml().xpath(<span class="string">"//h1[@class='arti-title']/text()"</span>).toString();</span><br><span class="line">                newInfo.setTitle(title);</span><br><span class="line"></span><br><span class="line">                String[] source = page.getHtml().xpath(<span class="string">"//p[@class='arti-metas']/span[1]/text()"</span>).toString().split(<span class="string">"："</span>);</span><br><span class="line">                newInfo.setSource(source[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">                String[] auther = page.getHtml().xpath(<span class="string">"//p[@class='arti-metas']/span[2]/text()"</span>).toString().split(<span class="string">"："</span>);</span><br><span class="line">                <span class="keyword">if</span> (auther.length &gt; <span class="number">2</span>) &#123;</span><br><span class="line">                    newInfo.setAuthor(auther[<span class="number">1</span>]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    newInfo.setAuthor(<span class="string">""</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                String[] date = page.getHtml().xpath(<span class="string">"//p[@class='arti-metas']/span[3]/text()"</span>).toString().split(<span class="string">"："</span>);</span><br><span class="line">                newInfo.setReleaseDate(date[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">                String view = page.getHtml().xpath(<span class="string">"//p[@class='arti-metas']/span[4]/span/text()"</span>).toString();</span><br><span class="line">                newInfo.setPageViews(view);</span><br><span class="line"></span><br><span class="line">                String content = page.getHtml().xpath(<span class="string">"//div[@class='wp_articlecontent']"</span>).toString();</span><br><span class="line">                <span class="comment">//剔除带class属性div</span></span><br><span class="line">                String replace = content.replace(<span class="string">"&lt;div class=\"wp_articlecontent\"&gt;"</span>, <span class="string">""</span>);</span><br><span class="line">                String replace2 = replace.replace(<span class="string">"&lt;/div&gt;"</span>, <span class="string">""</span>);</span><br><span class="line">                newInfo.setContent(replace2);</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">"爬取："</span> + url);</span><br><span class="line">                page.putField(<span class="string">"newInfo"</span>, newInfo);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Site site = Site.me()</span><br><span class="line">            .setCharset(<span class="string">"utf8"</span>)</span><br><span class="line">            <span class="comment">//超时时间</span></span><br><span class="line">            .setTimeOut(<span class="number">10</span> * <span class="number">1000</span>)</span><br><span class="line">            <span class="comment">//重试间隔时间</span></span><br><span class="line">            .setRetrySleepTime(<span class="number">3000</span>)</span><br><span class="line">            <span class="comment">//重试次数</span></span><br><span class="line">            .setRetryTimes(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Site <span class="title">getSite</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> site;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runCrawler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (redisTemplate.hasKey(<span class="string">"news"</span>)) &#123;</span><br><span class="line">            redisTemplate.delete(<span class="string">"news"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Spider.create(<span class="keyword">new</span> NewsProcesser())</span><br><span class="line">                .addUrl(URL)</span><br><span class="line">                .thread(<span class="number">5</span>)</span><br><span class="line">                .addPipeline(redisPipeline)</span><br><span class="line">                .run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-4-编写爬虫数据处理类，首先实现Pipeline接口的process方法，通过resultItems的get方法取出执行类中process方法通过putField方法放入的数据，并使用RedisTemplate类进行Redis的插入处理，使用他的opsForSet-add-key-value-方法进行集合方式数据添加。Mysql存储同理。同样记得添加-Component等注解，否则无法自动注入。"><a href="#emsp-emsp-4-编写爬虫数据处理类，首先实现Pipeline接口的process方法，通过resultItems的get方法取出执行类中process方法通过putField方法放入的数据，并使用RedisTemplate类进行Redis的插入处理，使用他的opsForSet-add-key-value-方法进行集合方式数据添加。Mysql存储同理。同样记得添加-Component等注解，否则无法自动注入。" class="headerlink" title="&emsp;&emsp;4.编写爬虫数据处理类，首先实现Pipeline接口的process方法，通过resultItems的get方法取出执行类中process方法通过putField方法放入的数据，并使用RedisTemplate类进行Redis的插入处理，使用他的opsForSet().add(key, value)方法进行集合方式数据添加。Mysql存储同理。同样记得添加@Component等注解，否则无法自动注入。"></a>&emsp;&emsp;4.编写爬虫数据处理类，首先实现Pipeline接口的process方法，通过resultItems的get方法取出执行类中process方法通过putField方法放入的数据，并使用RedisTemplate类进行Redis的插入处理，使用他的opsForSet().add(key, value)方法进行集合方式数据添加。Mysql存储同理。同样记得添加@Component等注解，否则无法自动注入。</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisPipeline</span> <span class="keyword">implements</span> <span class="title">Pipeline</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(ResultItems resultItems, Task task)</span> </span>&#123;</span><br><span class="line">        News newInfo = resultItems.get(<span class="string">"newInfo"</span>);</span><br><span class="line"><span class="comment">//        System.out.println("数据："+newInfo);</span></span><br><span class="line">        <span class="keyword">if</span> (newInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">            redisTemplate.opsForSet().add(<span class="string">"news"</span>, newInfo);</span><br><span class="line">            System.out.println(<span class="string">"保存成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-5-使用注解开启定时任务，在启动类上添加-EnableScheduling注解，爬虫执行方法上添加-Scheduled注解。如对springboot的定时任务仍存在疑虑可以查看我的另一篇博客SpringBoot定时任务。"><a href="#emsp-emsp-5-使用注解开启定时任务，在启动类上添加-EnableScheduling注解，爬虫执行方法上添加-Scheduled注解。如对springboot的定时任务仍存在疑虑可以查看我的另一篇博客SpringBoot定时任务。" class="headerlink" title="&emsp;&emsp;5.使用注解开启定时任务，在启动类上添加@EnableScheduling注解，爬虫执行方法上添加@Scheduled注解。如对springboot的定时任务仍存在疑虑可以查看我的另一篇博客SpringBoot定时任务。"></a>&emsp;&emsp;5.使用注解开启定时任务，在启动类上添加@EnableScheduling注解，爬虫执行方法上添加@Scheduled注解。如对springboot的定时任务仍存在疑虑可以查看我的另一篇博客<a href="https://zhengyue12.github.io/2020/05/15/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/">SpringBoot定时任务</a>。</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CrawlerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(CrawlerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewsProcesser</span> <span class="keyword">implements</span> <span class="title">PageProcessor</span> </span>&#123;</span><br><span class="line">	……</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(initialDelay = <span class="number">1000</span>, fixedDelay = <span class="number">100</span> * <span class="number">1000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runCrawler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (redisTemplate.hasKey(<span class="string">"news"</span>)) &#123;</span><br><span class="line">            redisTemplate.delete(<span class="string">"news"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Spider.create(<span class="keyword">new</span> NewsProcesser())</span><br><span class="line">                .addUrl(URL)</span><br><span class="line">                .thread(<span class="number">5</span>)</span><br><span class="line">                .addPipeline(redisPipeline)</span><br><span class="line">                .run();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-执行效果"><a href="#emsp-emsp-执行效果" class="headerlink" title="&emsp;&emsp;执行效果"></a>&emsp;&emsp;执行效果</h4><p><img src="/images/Java/5.png" alt="Yoyou"><br><img src="/images/Java/6.png" alt="Yoyou"></p>
<h4 id="emsp-emsp-6-将项目打成jar包，编写DockerFile。"><a href="#emsp-emsp-6-将项目打成jar包，编写DockerFile。" class="headerlink" title="&emsp;&emsp;6.将项目打成jar包，编写DockerFile。"></a>&emsp;&emsp;6.将项目打成jar包，编写DockerFile。</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">COPY *.jar /app.jar</span><br><span class="line">CMD [&quot;--server.port=8080&quot;]</span><br><span class="line">EXPOSE 8080</span><br><span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;/app.jar&quot;]</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-然后将其上传到服务器上。"><a href="#emsp-emsp-然后将其上传到服务器上。" class="headerlink" title="&emsp;&emsp;然后将其上传到服务器上。"></a>&emsp;&emsp;然后将其上传到服务器上。</h4><p><img src="/images/Java/7.png" alt="Yoyou"></p>
<h4 id="emsp-emsp-执行以下命令，将其打成镜像"><a href="#emsp-emsp-执行以下命令，将其打成镜像" class="headerlink" title="&emsp;&emsp;执行以下命令，将其打成镜像"></a>&emsp;&emsp;执行以下命令，将其打成镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t 镜像名 .</span><br></pre></td></tr></table></figure>
<p><img src="/images/Java/8.png" alt="Yoyou"></p>
<h4 id="emsp-emsp-查看所有镜像"><a href="#emsp-emsp-查看所有镜像" class="headerlink" title="&emsp;&emsp;查看所有镜像"></a>&emsp;&emsp;查看所有镜像</h4><p><img src="/images/Java/9.png" alt="Yoyou"></p>
<h4 id="emsp-emsp-运行springboot容器"><a href="#emsp-emsp-运行springboot容器" class="headerlink" title="&emsp;&emsp;运行springboot容器"></a>&emsp;&emsp;运行springboot容器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name 容器名 -p 暴露端口号:映射端口号 boot</span><br></pre></td></tr></table></figure>
<p><img src="/images/Java/11.png" alt="Yoyou"></p>
<h4 id="emsp-emsp-查看效果"><a href="#emsp-emsp-查看效果" class="headerlink" title="&emsp;&emsp;查看效果"></a>&emsp;&emsp;查看效果</h4><p><img src="/images/Java/10.png" alt="Yoyou"></p>
<h4 id="emsp-emsp-至此，就全部完成了。最后，附上Github代码仓库地址。"><a href="#emsp-emsp-至此，就全部完成了。最后，附上Github代码仓库地址。" class="headerlink" title="&emsp;&emsp;至此，就全部完成了。最后，附上Github代码仓库地址。"></a>&emsp;&emsp;至此，就全部完成了。最后，附上<a href="https://github.com/zhengyue12/springboot-webmagic" target="_blank" rel="noopener">Github代码仓库地址</a>。</h4>]]></content>
      <categories>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>Webmagic</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>MP多模块代码生成器模板</title>
    <url>/2020/05/17/MP%E5%A4%9A%E6%A8%A1%E5%9D%97%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h4 id="从正式进入项目组到接手练习做项目，一直想写一个多模块的代码生成器，方便组内其他成员去自动生成三层架构和实体类等代码，避免重复繁琐的操作。又因为这几天改Bug改到自闭，一直没有时间将其实践起来。因为今天是周末所以早早就起来，结合官网的单模块代码生成器，以及一上午仅仅找到一篇类似的博客进行改写，完成了多模块代码生成的模板。以下直接放代码，记录一下，方便以后工作直接套用。"><a href="#从正式进入项目组到接手练习做项目，一直想写一个多模块的代码生成器，方便组内其他成员去自动生成三层架构和实体类等代码，避免重复繁琐的操作。又因为这几天改Bug改到自闭，一直没有时间将其实践起来。因为今天是周末所以早早就起来，结合官网的单模块代码生成器，以及一上午仅仅找到一篇类似的博客进行改写，完成了多模块代码生成的模板。以下直接放代码，记录一下，方便以后工作直接套用。" class="headerlink" title="从正式进入项目组到接手练习做项目，一直想写一个多模块的代码生成器，方便组内其他成员去自动生成三层架构和实体类等代码，避免重复繁琐的操作。又因为这几天改Bug改到自闭，一直没有时间将其实践起来。因为今天是周末所以早早就起来，结合官网的单模块代码生成器，以及一上午仅仅找到一篇类似的博客进行改写，完成了多模块代码生成的模板。以下直接放代码，记录一下，方便以后工作直接套用。"></a>从正式进入项目组到接手练习做项目，一直想写一个多模块的代码生成器，方便组内其他成员去自动生成三层架构和实体类等代码，避免重复繁琐的操作。又因为这几天改Bug改到自闭，一直没有时间将其实践起来。因为今天是周末所以早早就起来，结合官网的单模块代码生成器，以及一上午仅仅找到一篇类似的博客进行改写，完成了多模块代码生成的模板。以下直接放代码，记录一下，方便以后工作直接套用。</h4><a id="more"></a>

<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.studio.utils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.exceptions.MybatisPlusException;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringPool;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.InjectionConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.*;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableInfo;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.sql.Driver;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h3&gt;mpgenerator&lt;/h3&gt;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> : zhengyue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> : 2020-03-13 17:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeGenerator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">scanner</span><span class="params">(String tip)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        StringBuilder help = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        help.append(<span class="string">"请输入"</span> + tip + <span class="string">"："</span>);</span><br><span class="line">        System.out.println(help.toString());</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext()) &#123;</span><br><span class="line">            String ipt = scanner.next();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotEmpty(ipt)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ipt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MybatisPlusException(<span class="string">"请输入正确的"</span> + tip + <span class="string">"！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//      String [] tableNames = new String[]&#123;"cms_user"&#125;;</span></span><br><span class="line">        String[] tableNames = scanner(<span class="string">"表名，多个英文逗号分割"</span>).split(<span class="string">","</span>);</span><br><span class="line"></span><br><span class="line">        String [] modules = <span class="keyword">new</span> String[]&#123;<span class="string">"studio_pojo"</span>, <span class="string">"studio_dao"</span>, <span class="string">"studio_service"</span>, <span class="string">"studio_controller"</span>&#125;;<span class="comment">//项目模块名，需自定义</span></span><br><span class="line">        <span class="keyword">for</span> (String <span class="keyword">module</span> : modules) &#123;</span><br><span class="line">            moduleGenerator(<span class="keyword">module</span>,tableNames);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">moduleGenerator</span><span class="params">(String <span class="keyword">module</span>,String [] tableNames)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        GlobalConfig globalConfig = getGlobalConfig(<span class="keyword">module</span>);<span class="comment">// 全局配置</span></span><br><span class="line"></span><br><span class="line">        DataSourceConfig dataSourceConfig = getDataSourceConfig();<span class="comment">// 数据源配置</span></span><br><span class="line"></span><br><span class="line">        PackageConfig packageConfig = getPackageConfig(<span class="keyword">module</span>);<span class="comment">// 包配置</span></span><br><span class="line"></span><br><span class="line">        StrategyConfig strategyConfig = getStrategyConfig(tableNames);<span class="comment">// 策略配置</span></span><br><span class="line"></span><br><span class="line">        TemplateConfig templateConfig = getTemplateConfig(<span class="keyword">module</span>);<span class="comment">// 配置模板</span></span><br><span class="line"></span><br><span class="line">        InjectionConfig cfgConfig = getCfgConfig(); <span class="comment">//自定义导出设置</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> AutoGenerator()</span><br><span class="line">                .setGlobalConfig(globalConfig)</span><br><span class="line">                .setDataSource(dataSourceConfig)</span><br><span class="line">                .setPackageInfo(packageConfig)</span><br><span class="line">                .setStrategy(strategyConfig)</span><br><span class="line">                .setTemplate(templateConfig)</span><br><span class="line">                .setCfg(cfgConfig)</span><br><span class="line">                .execute();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> InjectionConfig <span class="title">getCfgConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InjectionConfig cfg = <span class="keyword">new</span> InjectionConfig() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// to do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        String projectPath = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果模板引擎是 freemarker</span></span><br><span class="line"><span class="comment">//        String templatePath = "/templates/mapper.xml.ftl";</span></span><br><span class="line">        <span class="comment">// 如果模板引擎是 velocity</span></span><br><span class="line">         String templatePath = <span class="string">"/templates/mapper.xml.vm"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义输出配置</span></span><br><span class="line">        List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> File(<span class="string">"studio_dao"</span>).getAbsolutePath()+ <span class="string">"/src/main/resources/mapper/"</span> + tableInfo.getEntityName()</span><br><span class="line">                        + <span class="string">"Mapper"</span> + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line">        <span class="keyword">return</span> cfg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> TemplateConfig <span class="title">getTemplateConfig</span><span class="params">(String <span class="keyword">module</span>)</span> </span>&#123;</span><br><span class="line">        TemplateConfig templateConfig = <span class="keyword">new</span> TemplateConfig();</span><br><span class="line">        <span class="comment">//studio_pojo", "studio_dao", "studio_service", "studio_controller</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"studio_pojo"</span>.equals(<span class="keyword">module</span>))&#123;</span><br><span class="line">            templateConfig.setEntity(<span class="keyword">new</span> TemplateConfig().getEntity(<span class="keyword">false</span>))</span><br><span class="line">                    .setMapper(<span class="keyword">null</span>)<span class="comment">//mapper模板</span></span><br><span class="line">                    .setXml(<span class="keyword">null</span>)</span><br><span class="line">                    .setService(<span class="keyword">null</span>)</span><br><span class="line">                    .setServiceImpl(<span class="keyword">null</span>)</span><br><span class="line">                    .setController(<span class="keyword">null</span>);<span class="comment">//service模块不生成controller代码</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"studio_dao"</span>.equals(<span class="keyword">module</span>))&#123;<span class="comment">//web模块只生成controller代码</span></span><br><span class="line">            templateConfig.setEntity(<span class="keyword">null</span>)</span><br><span class="line">                    .setMapper(<span class="keyword">new</span> TemplateConfig().getMapper())</span><br><span class="line">                    .setXml(<span class="keyword">null</span>)</span><br><span class="line">                    .setService(<span class="keyword">null</span>)</span><br><span class="line">                    .setServiceImpl(<span class="keyword">null</span>)</span><br><span class="line">                    .setController(<span class="keyword">null</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"studio_service"</span>.equals(<span class="keyword">module</span>))&#123;<span class="comment">//web模块只生成controller代码</span></span><br><span class="line">            templateConfig.setEntity(<span class="keyword">null</span>)</span><br><span class="line">                    .setMapper(<span class="keyword">null</span>)</span><br><span class="line">                    .setXml(<span class="keyword">null</span>)</span><br><span class="line">                    .setService(<span class="keyword">new</span> TemplateConfig().getService())</span><br><span class="line">                    .setServiceImpl(<span class="keyword">new</span> TemplateConfig().getServiceImpl())</span><br><span class="line">                    .setController(<span class="keyword">null</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"studio_controller"</span>.equals(<span class="keyword">module</span>))&#123;<span class="comment">//web模块只生成controller代码</span></span><br><span class="line">            templateConfig.setEntity(<span class="keyword">null</span>)</span><br><span class="line">                    .setMapper(<span class="keyword">null</span>)</span><br><span class="line">                    .setXml(<span class="keyword">null</span>)</span><br><span class="line">                    .setService(<span class="keyword">null</span>)</span><br><span class="line">                    .setServiceImpl(<span class="keyword">null</span>)</span><br><span class="line">                    .setController(<span class="keyword">new</span> TemplateConfig().getController());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"参数匹配错误，请检查"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> templateConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> StrategyConfig <span class="title">getStrategyConfig</span><span class="params">(String[] tableNames)</span> </span>&#123;</span><br><span class="line">        StrategyConfig strategyConfig = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategyConfig</span><br><span class="line">                <span class="comment">//驼峰命名</span></span><br><span class="line">                .setCapitalMode(<span class="keyword">true</span>)</span><br><span class="line">                <span class="comment">//lombok</span></span><br><span class="line">                .setEntityLombokModel(<span class="keyword">true</span>) </span><br><span class="line">                <span class="comment">//restful</span></span><br><span class="line">                .setRestControllerStyle(<span class="keyword">true</span>) </span><br><span class="line">                .setNaming(NamingStrategy.underline_to_camel)</span><br><span class="line">                .setColumnNaming(NamingStrategy.underline_to_camel)</span><br><span class="line">                <span class="comment">//继承父类</span></span><br><span class="line">                .setSuperEntityClass(<span class="string">"com.studio.entity.BaseEntity"</span>)</span><br><span class="line">                <span class="comment">//排除父类的属性</span></span><br><span class="line">                .setSuperEntityColumns(<span class="keyword">new</span> String[]&#123;<span class="string">"id"</span>, <span class="string">"create_id"</span>, <span class="string">"update_id"</span>, <span class="string">"create_time"</span>, <span class="string">"update_time"</span>, <span class="string">"is_del"</span>&#125;)</span><br><span class="line">                .setInclude(tableNames);</span><br><span class="line">        <span class="keyword">return</span> strategyConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> PackageConfig <span class="title">getPackageConfig</span><span class="params">(String <span class="keyword">module</span>)</span> </span>&#123;</span><br><span class="line">        PackageConfig packageConfig = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        String packageName = <span class="string">"com.studio"</span>;<span class="comment">//不同模块 代码生成具体路径自定义指定</span></span><br><span class="line">        <span class="comment">//studio_pojo", "studio_dao", "studio_service", "studio_controller</span></span><br><span class="line">        packageConfig.setParent(packageName)</span><br><span class="line">                .setEntity(<span class="string">"entity"</span>)</span><br><span class="line">                .setMapper(<span class="string">"mapper"</span>)</span><br><span class="line">                .setService(<span class="string">"service"</span>)</span><br><span class="line">                .setController(<span class="string">"controller"</span>);</span><br><span class="line">        <span class="keyword">return</span> packageConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> DataSourceConfig <span class="title">getDataSourceConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String dbUrl = <span class="string">"jdbc:mysql://*.*.*.*:3306/software_studio?useSSL=false&amp;serverTimezone=GMT%2B8&amp;characterEncoding=utf8&amp;allowPublicKeyRetrieval=true"</span>;</span><br><span class="line">        DataSourceConfig dataSourceConfig = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dataSourceConfig.setDbType(DbType.MYSQL)</span><br><span class="line">                .setDriverName(Driver.class.getName())</span><br><span class="line">                .setUsername(<span class="string">"root"</span>)</span><br><span class="line">                .setPassword(<span class="string">"123456"</span>)</span><br><span class="line">                .setUrl(dbUrl);</span><br><span class="line">        <span class="keyword">return</span> dataSourceConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> GlobalConfig <span class="title">getGlobalConfig</span><span class="params">(String <span class="keyword">module</span>)</span> </span>&#123;</span><br><span class="line">        GlobalConfig globalConfig = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line">        globalConfig.setOpen(<span class="keyword">false</span>)<span class="comment">//new File(module).getAbsolutePath()得到模块根目录路径，因事Maven项目，代码指定路径自定义调整</span></span><br><span class="line">                .setOutputDir(<span class="keyword">new</span> File(<span class="keyword">module</span>).getAbsolutePath()+<span class="string">"/src/main/java"</span>) <span class="comment">//生成文件的输出目录</span></span><br><span class="line">                .setFileOverride(<span class="keyword">false</span>)<span class="comment">//是否覆盖已有文件</span></span><br><span class="line">                .setActiveRecord(<span class="keyword">false</span>)</span><br><span class="line">                .setIdType(IdType.ID_WORKER)</span><br><span class="line">                .setAuthor(<span class="string">"zhengyue"</span>);</span><br><span class="line">        <span class="keyword">return</span> globalConfig;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="效果图展示"><a href="#效果图展示" class="headerlink" title="效果图展示"></a>效果图展示</h2><p><img src="/images/Java/1.png" alt="Yoyou"><br><img src="/images/Java/2.png" alt="Yoyou"></p>
]]></content>
      <categories>
        <category>Java</category>
        <category>MybatisPlus</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MybatisPlus</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker基本命令（二）</title>
    <url>/2020/05/16/Docker%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="容器操作命令："><a href="#容器操作命令：" class="headerlink" title="容器操作命令："></a>容器操作命令：</h2><h4 id="emsp-emsp-查看容器进程信息"><a href="#emsp-emsp-查看容器进程信息" class="headerlink" title="&emsp;&emsp;查看容器进程信息"></a>&emsp;&emsp;查看容器进程信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker top 容器的id</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-查看镜像的元数据"><a href="#emsp-emsp-查看镜像的元数据" class="headerlink" title="&emsp;&emsp;查看镜像的元数据"></a>&emsp;&emsp;查看镜像的元数据</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker inspect 容器的id</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="emsp-emsp-进入当前正在运行的容器"><a href="#emsp-emsp-进入当前正在运行的容器" class="headerlink" title="&emsp;&emsp;进入当前正在运行的容器"></a>&emsp;&emsp;进入当前正在运行的容器</h4><h4 id="emsp-emsp-emsp-emsp-docker-exec-进入容器后开启一个新的终端，可以在里面操作"><a href="#emsp-emsp-emsp-emsp-docker-exec-进入容器后开启一个新的终端，可以在里面操作" class="headerlink" title="&emsp;&emsp;&emsp;&emsp;docker exec 进入容器后开启一个新的终端，可以在里面操作"></a>&emsp;&emsp;&emsp;&emsp;docker exec 进入容器后开启一个新的终端，可以在里面操作</h4><h4 id="emsp-emsp-emsp-emsp-docker-attach-进入容器正在执行的终端，不会启动新的进程"><a href="#emsp-emsp-emsp-emsp-docker-attach-进入容器正在执行的终端，不会启动新的进程" class="headerlink" title="&emsp;&emsp;&emsp;&emsp;docker attach 进入容器正在执行的终端，不会启动新的进程"></a>&emsp;&emsp;&emsp;&emsp;docker attach 进入容器正在执行的终端，不会启动新的进程</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 容器的id /bin/bash</span><br><span class="line"></span><br><span class="line">docker attach 容器的id</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-从容器上拷贝文件到主机上"><a href="#emsp-emsp-从容器上拷贝文件到主机上" class="headerlink" title="&emsp;&emsp;从容器上拷贝文件到主机上"></a>&emsp;&emsp;从容器上拷贝文件到主机上</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp 容器的id:/home/hello.txt ~</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot定时任务</title>
    <url>/2020/05/15/SpringBoot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="依赖："><a href="#依赖：" class="headerlink" title="依赖："></a>依赖：</h2><h4 id="只需导入Springboot"><a href="#只需导入Springboot" class="headerlink" title="只需导入Springboot"></a>只需导入Springboot</h4><h2 id="操作过程："><a href="#操作过程：" class="headerlink" title="操作过程："></a>操作过程：</h2><h4 id="1-SpringBoot启动类类上添加-EnableScheduling注解，开启定时任务"><a href="#1-SpringBoot启动类类上添加-EnableScheduling注解，开启定时任务" class="headerlink" title="1. SpringBoot启动类类上添加@EnableScheduling注解，开启定时任务"></a>1. SpringBoot启动类类上添加@EnableScheduling注解，开启定时任务</h4><a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-在方法上加上-Scheduled，以及括号内cron表达式，注意一定一定不要忘记将类加入到spring容器中，例如：以下代码所示将在执行每天的11：40分执行"><a href="#2-在方法上加上-Scheduled，以及括号内cron表达式，注意一定一定不要忘记将类加入到spring容器中，例如：以下代码所示将在执行每天的11：40分执行" class="headerlink" title="2.在方法上加上@Scheduled，以及括号内cron表达式，注意一定一定不要忘记将类加入到spring容器中，例如：以下代码所示将在执行每天的11：40分执行"></a>2.在方法上加上@Scheduled，以及括号内cron表达式，注意一定一定不要忘记将类加入到spring容器中，例如：以下代码所示将在执行每天的11：40分执行</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">"0 41 11 * * ?"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">        System.out.println(<span class="string">"当前时间："</span> + df.format(<span class="keyword">new</span> Date()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a>效果图：</h2><p><img src="/images/Java/3.png" alt="Yoyou"></p>
<h2 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a>扩展：</h2><h4 id="Scheduled注解的参数有两种形式："><a href="#Scheduled注解的参数有两种形式：" class="headerlink" title="@Scheduled注解的参数有两种形式："></a>@Scheduled注解的参数有两种形式：</h4><h4 id="1-initialDelay-程序启动后几毫秒后执行-、fixedRate-上一次开始执行后几秒开始执行-、fixedDelay（上一次执行完成后几秒开始执行）。例如：以下代码所示为启动后1秒执行，方法执行完成后间隔100秒继续执行"><a href="#1-initialDelay-程序启动后几毫秒后执行-、fixedRate-上一次开始执行后几秒开始执行-、fixedDelay（上一次执行完成后几秒开始执行）。例如：以下代码所示为启动后1秒执行，方法执行完成后间隔100秒继续执行" class="headerlink" title="1.initialDelay(程序启动后几毫秒后执行)、fixedRate(上一次开始执行后几秒开始执行)、fixedDelay（上一次执行完成后几秒开始执行）。例如：以下代码所示为启动后1秒执行，方法执行完成后间隔100秒继续执行"></a>1.initialDelay(程序启动后几毫秒后执行)、fixedRate(上一次开始执行后几秒开始执行)、fixedDelay（上一次执行完成后几秒开始执行）。例如：以下代码所示为启动后1秒执行，方法执行完成后间隔100秒继续执行</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Scheduled</span>(initialDelay = <span class="number">1000</span>, fixedDelay = <span class="number">100</span>*<span class="number">1000</span>)</span><br></pre></td></tr></table></figure>
<h4 id="2-cron表达式："><a href="#2-cron表达式：" class="headerlink" title="2.cron表达式："></a>2.cron表达式：</h4><h5 id="【秒-分-时-日-月-周】"><a href="#【秒-分-时-日-月-周】" class="headerlink" title="【秒 分 时 日 月 周】"></a>【秒 分 时 日 月 周】</h5><h5 id="【0-0-0-？】-每天0点整"><a href="#【0-0-0-？】-每天0点整" class="headerlink" title="【0 0 0 * * ？】 每天0点整"></a>【0 0 0 * * ？】 每天0点整</h5><h5 id="【0-1-2-0-】-每天0点1、2分"><a href="#【0-1-2-0-】-每天0点1、2分" class="headerlink" title="【0 1,2 0 * * ?】 每天0点1、2分"></a>【0 1,2 0 * * ?】 每天0点1、2分</h5><h5 id="【0-0-0-Mon-Fri】-每天0点整"><a href="#【0-0-0-Mon-Fri】-每天0点整" class="headerlink" title="【0 0 0 * * Mon-Fri】 每天0点整"></a>【0 0 0 * * Mon-Fri】 每天0点整</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Scheduled</span>(cron = <span class="string">"0 41 11 * * ?"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
        <tag>定时任务</tag>
      </tags>
  </entry>
  <entry>
    <title>【递归】汉诺塔问题</title>
    <url>/2020/04/02/%E3%80%90%E9%80%92%E5%BD%92%E3%80%91%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><h4 id="楚继光报怨道：“能量盘为什么要这样移动？真够麻烦的。”"><a href="#楚继光报怨道：“能量盘为什么要这样移动？真够麻烦的。”" class="headerlink" title="楚继光报怨道：“能量盘为什么要这样移动？真够麻烦的。”"></a>楚继光报怨道：“能量盘为什么要这样移动？真够麻烦的。”</h4><h4 id="“因为这样移动，暗含宇宙运行的奥义，它能够产生巨大的魔法力，将修罗王的魔法炮阵灭成渣。”墨老师一副高深莫测的神情。"><a href="#“因为这样移动，暗含宇宙运行的奥义，它能够产生巨大的魔法力，将修罗王的魔法炮阵灭成渣。”墨老师一副高深莫测的神情。" class="headerlink" title="“因为这样移动，暗含宇宙运行的奥义，它能够产生巨大的魔法力，将修罗王的魔法炮阵灭成渣。”墨老师一副高深莫测的神情。"></a>“因为这样移动，暗含宇宙运行的奥义，它能够产生巨大的魔法力，将修罗王的魔法炮阵灭成渣。”墨老师一副高深莫测的神情。</h4><h4 id="如图所示，已知魔法学院的防御系统的能量模块上有三根柱子a，b，c，能量盘为中间有孔的圆盘状，能量盘直径依次递减，初始时b柱、c柱为空，所有盘片套在a柱上，并且上面的盘片总是比下面的盘片小，现需将a柱上的能量盘通过b柱移到c柱上，规则是每次移动只能移动最上面的能量盘，而且保持任何柱子上的能量盘的排列均是上面的盘片比下面的盘片要小。试问需要移动多少次？"><a href="#如图所示，已知魔法学院的防御系统的能量模块上有三根柱子a，b，c，能量盘为中间有孔的圆盘状，能量盘直径依次递减，初始时b柱、c柱为空，所有盘片套在a柱上，并且上面的盘片总是比下面的盘片小，现需将a柱上的能量盘通过b柱移到c柱上，规则是每次移动只能移动最上面的能量盘，而且保持任何柱子上的能量盘的排列均是上面的盘片比下面的盘片要小。试问需要移动多少次？" class="headerlink" title="如图所示，已知魔法学院的防御系统的能量模块上有三根柱子a，b，c，能量盘为中间有孔的圆盘状，能量盘直径依次递减，初始时b柱、c柱为空，所有盘片套在a柱上，并且上面的盘片总是比下面的盘片小，现需将a柱上的能量盘通过b柱移到c柱上，规则是每次移动只能移动最上面的能量盘，而且保持任何柱子上的能量盘的排列均是上面的盘片比下面的盘片要小。试问需要移动多少次？"></a>如图所示，已知魔法学院的防御系统的能量模块上有三根柱子a，b，c，能量盘为中间有孔的圆盘状，能量盘直径依次递减，初始时b柱、c柱为空，所有盘片套在a柱上，并且上面的盘片总是比下面的盘片小，现需将a柱上的能量盘通过b柱移到c柱上，规则是每次移动只能移动最上面的能量盘，而且保持任何柱子上的能量盘的排列均是上面的盘片比下面的盘片要小。试问需要移动多少次？</h4><a id="more"></a>
<p><img src="/images/%E7%AE%97%E6%B3%95/1.png" alt="Yoyou"></p>
<h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><h4 id="一个整数n，表示n个盘。"><a href="#一个整数n，表示n个盘。" class="headerlink" title="一个整数n，表示n个盘。"></a>一个整数n，表示n个盘。</h4><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><h4 id="一个整数，表示需要移动的次数。"><a href="#一个整数，表示需要移动的次数。" class="headerlink" title="一个整数，表示需要移动的次数。"></a>一个整数，表示需要移动的次数。</h4><h2 id="输入样式："><a href="#输入样式：" class="headerlink" title="输入样式："></a>输入样式：</h2><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><h2 id="输出样式"><a href="#输出样式" class="headerlink" title="输出样式"></a>输出样式</h2><h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><h4 id="将A盘子上N个盘子移动到C盘子可以分解成将A盘子上N-1个盘子通过C移动到B上面，再将A上一个盘子移动到C上面，再将B上面的N-1个盘子通过A移动到C"><a href="#将A盘子上N个盘子移动到C盘子可以分解成将A盘子上N-1个盘子通过C移动到B上面，再将A上一个盘子移动到C上面，再将B上面的N-1个盘子通过A移动到C" class="headerlink" title="将A盘子上N个盘子移动到C盘子可以分解成将A盘子上N-1个盘子通过C移动到B上面，再将A上一个盘子移动到C上面，再将B上面的N-1个盘子通过A移动到C;"></a>将A盘子上N个盘子移动到C盘子可以分解成将A盘子上N-1个盘子通过C移动到B上面，再将A上一个盘子移动到C上面，再将B上面的N-1个盘子通过A移动到C;</h4><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;<span class="comment">//移动次数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hanci</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> a,<span class="keyword">char</span> b,<span class="keyword">char</span> c)</span></span>&#123;<span class="comment">//n代表a柱子上的剩余盘子数 </span></span><br><span class="line">	<span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">"-&gt;"</span>&lt;&lt;c&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	hanci(n<span class="number">-1</span>,a,c,b);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">"-&gt;"</span>&lt;&lt;c&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	hanci(n<span class="number">-1</span>,b,a,c);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	hanci(n,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
        <category>递归</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title>【递归】N皇后问题</title>
    <url>/2020/04/02/%E3%80%90%E9%80%92%E5%BD%92%E3%80%91N%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><h4 id="在n×n-格的棋盘上放置彼此不受攻击的n-个皇后。按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。n后问题等价于在n×n格的棋盘上放置n个皇后，任何2-个皇后不放在同一行或同一列或同一斜线上。"><a href="#在n×n-格的棋盘上放置彼此不受攻击的n-个皇后。按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。n后问题等价于在n×n格的棋盘上放置n个皇后，任何2-个皇后不放在同一行或同一列或同一斜线上。" class="headerlink" title="在n×n 格的棋盘上放置彼此不受攻击的n 个皇后。按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。n后问题等价于在n×n格的棋盘上放置n个皇后，任何2 个皇后不放在同一行或同一列或同一斜线上。"></a>在n×n 格的棋盘上放置彼此不受攻击的n 个皇后。按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。n后问题等价于在n×n格的棋盘上放置n个皇后，任何2 个皇后不放在同一行或同一列或同一斜线上。</h4><h4 id="设计一个解-n-后问题的队列式分支限界法。计算在n-n个方格上放置彼此不受攻击的n个皇后的一个放置方案。"><a href="#设计一个解-n-后问题的队列式分支限界法。计算在n-n个方格上放置彼此不受攻击的n个皇后的一个放置方案。" class="headerlink" title="设计一个解 n 后问题的队列式分支限界法。计算在n*n个方格上放置彼此不受攻击的n个皇后的一个放置方案。"></a>设计一个解 n 后问题的队列式分支限界法。计算在n*n个方格上放置彼此不受攻击的n个皇后的一个放置方案。</h4><a id="more"></a>
<h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><h4 id="1-个正整数n"><a href="#1-个正整数n" class="headerlink" title="1 个正整数n"></a>1 个正整数n</h4><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h2><h4 id="输出计算出的彼此不受攻击的n个皇后的一个放置方案。"><a href="#输出计算出的彼此不受攻击的n个皇后的一个放置方案。" class="headerlink" title="输出计算出的彼此不受攻击的n个皇后的一个放置方案。"></a>输出计算出的彼此不受攻击的n个皇后的一个放置方案。</h4><h2 id="输人样例："><a href="#输人样例：" class="headerlink" title="输人样例："></a>输人样例：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<h2 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 3 5 2 4</span><br></pre></td></tr></table></figure>
<h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><h4 id="记录下已经摆放完成的n-1个皇后的列序号，对比当前的列序号、行号、斜对角（处于同一斜对角线的两个皇后的列序号和行号的差一样）的是否一致，如果一致不能摆放。直到最后一个摆放完成即可。"><a href="#记录下已经摆放完成的n-1个皇后的列序号，对比当前的列序号、行号、斜对角（处于同一斜对角线的两个皇后的列序号和行号的差一样）的是否一致，如果一致不能摆放。直到最后一个摆放完成即可。" class="headerlink" title="记录下已经摆放完成的n-1个皇后的列序号，对比当前的列序号、行号、斜对角（处于同一斜对角线的两个皇后的列序号和行号的差一样）的是否一致，如果一致不能摆放。直到最后一个摆放完成即可。"></a>记录下已经摆放完成的n-1个皇后的列序号，对比当前的列序号、行号、斜对角（处于同一斜对角线的两个皇后的列序号和行号的差一样）的是否一致，如果一致不能摆放。直到最后一个摆放完成即可。</h4><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;<span class="comment">//输入数据 </span></span><br><span class="line"><span class="keyword">int</span> option[<span class="number">100</span>];<span class="comment">//保存每一个皇后所在的列号 </span></span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putQueen</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(k==n&amp;&amp;!flag)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;option[i]+<span class="number">1</span>&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		flag++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">		<span class="keyword">int</span> j;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;k;++j)&#123;<span class="comment">//和已经摆放好的k个皇后进行比较 </span></span><br><span class="line">			<span class="keyword">if</span>(i==option[j] || <span class="built_in">abs</span>(k-j)==<span class="built_in">abs</span>(i-option[j]))&#123;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125; </span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(j==k)&#123;</span><br><span class="line">			option[k]=i;</span><br><span class="line">			putQueen(k+<span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	putQueen(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法</category>
        <category>递归</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat提交数据乱码问题</title>
    <url>/2020/03/30/Tomcat%E6%8F%90%E4%BA%A4%E6%95%B0%E6%8D%AE%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="请求乱码："><a href="#请求乱码：" class="headerlink" title="请求乱码："></a>请求乱码：</h2><h4 id="emsp-emsp-GET请求："><a href="#emsp-emsp-GET请求：" class="headerlink" title="&emsp;&emsp;GET请求："></a>&emsp;&emsp;GET请求：</h4><h4 id="emsp-emsp-emsp-emsp-更改server-xml；在8080断口处加上URIEncoding-“UTF-8”"><a href="#emsp-emsp-emsp-emsp-更改server-xml；在8080断口处加上URIEncoding-“UTF-8”" class="headerlink" title="&emsp;&emsp;&emsp;&emsp;更改server.xml；在8080断口处加上URIEncoding=“UTF-8”"></a>&emsp;&emsp;&emsp;&emsp;更改server.xml；在8080断口处加上URIEncoding=“UTF-8”</h4><h4 id="emsp-emsp-POST请求："><a href="#emsp-emsp-POST请求：" class="headerlink" title="&emsp;&emsp;POST请求："></a>&emsp;&emsp;POST请求：</h4><h4 id="emsp-emsp-emsp-emsp-在第一个获取请求参数之前数值"><a href="#emsp-emsp-emsp-emsp-在第一个获取请求参数之前数值" class="headerlink" title="&emsp;&emsp;&emsp;&emsp;在第一个获取请求参数之前数值"></a>&emsp;&emsp;&emsp;&emsp;在第一个获取请求参数之前数值</h4><a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure>
<h2 id="响应乱码："><a href="#响应乱码：" class="headerlink" title="响应乱码："></a>响应乱码：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>中间件</category>
        <category>Tomcat</category>
      </categories>
      <tags>
        <tag>中间件</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring和Jackson版本冲突</title>
    <url>/2020/03/30/Spring%E5%92%8CJackson%E7%89%88%E6%9C%AC%E5%86%B2%E7%AA%81/</url>
    <content><![CDATA[<h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Caused by:java.lang.ClassNotFoundException:com.fasterxml.jackson.databind.exc.InvaliDefinitionException</span><br><span class="line">	at java.net.URLClassLoader.findClass</span><br><span class="line">	at java.lang.ClassLoader.loadClass</span><br><span class="line">	at sun.misc.Launcher$AppClassLoader.loadClass</span><br><span class="line">	at java.lang.ClassLoader.loadClass</span><br><span class="line">	...49more</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h2 id="问题原因："><a href="#问题原因：" class="headerlink" title="问题原因："></a>问题原因：</h2><h4 id="Spring和Jackson版本冲突"><a href="#Spring和Jackson版本冲突" class="headerlink" title="Spring和Jackson版本冲突"></a>Spring和Jackson版本冲突</h4><h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><h4 id="添加对应的依赖，Spring5-x-x对应Jackson1-9-x"><a href="#添加对应的依赖，Spring5-x-x对应Jackson1-9-x" class="headerlink" title="添加对应的依赖，Spring5.x.x对应Jackson1.9.x"></a>添加对应的依赖，Spring5.x.x对应Jackson1.9.x</h4>]]></content>
      <categories>
        <category>Java</category>
        <category>Spring</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Ajax发送PUT请求时引发的血案</title>
    <url>/2020/03/30/Ajax%E5%8F%91%E9%80%81PUT%E8%AF%B7%E6%B1%82%E6%97%B6%E5%BC%95%E5%8F%91%E7%9A%84%E8%A1%80%E6%A1%88/</url>
    <content><![CDATA[<h2 id="使用ajax直接发送put请求："><a href="#使用ajax直接发送put请求：" class="headerlink" title="使用ajax直接发送put请求："></a>使用ajax直接发送put请求：</h2><h4 id="封装的数据"><a href="#封装的数据" class="headerlink" title="封装的数据"></a>封装的数据</h4><h4 id="Employ"><a href="#Employ" class="headerlink" title="Employ"></a>Employ</h4><h4 id="empId-100-empName-null-gender-null-email-null"><a href="#empId-100-empName-null-gender-null-email-null" class="headerlink" title="[empId=100, empName=null, gender=null, email=null]"></a>[empId=100, empName=null, gender=null, email=null]</h4><a id="more"></a>
<h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><h4 id="emsp-emsp-请求体中有数据，"><a href="#emsp-emsp-请求体中有数据，" class="headerlink" title="&emsp;&emsp;请求体中有数据，"></a>&emsp;&emsp;请求体中有数据，</h4><h4 id="emsp-emsp-但是Employee对象封装不上；"><a href="#emsp-emsp-但是Employee对象封装不上；" class="headerlink" title="&emsp;&emsp;但是Employee对象封装不上；"></a>&emsp;&emsp;但是Employee对象封装不上；</h4><h4 id="emsp-emsp-update-tbl-emp-where-emp-id-1024"><a href="#emsp-emsp-update-tbl-emp-where-emp-id-1024" class="headerlink" title="&emsp;&emsp;update tbl_emp where emp_id = 1024;"></a>&emsp;&emsp;update tbl_emp where emp_id = 1024;</h4><h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><h4 id="emsp-emsp-Tomcat："><a href="#emsp-emsp-Tomcat：" class="headerlink" title="&emsp;&emsp;Tomcat："></a>&emsp;&emsp;Tomcat：</h4><h4 id="emsp-emsp-emsp-emsp-1-将请求体中的数据，封装一个map。"><a href="#emsp-emsp-emsp-emsp-1-将请求体中的数据，封装一个map。" class="headerlink" title="&emsp;&emsp;&emsp;&emsp;1.将请求体中的数据，封装一个map。"></a>&emsp;&emsp;&emsp;&emsp;1.将请求体中的数据，封装一个map。</h4><h4 id="emsp-emsp-emsp-emsp-2-requestParameter-“empName”-就会从这个map中取值"><a href="#emsp-emsp-emsp-emsp-2-requestParameter-“empName”-就会从这个map中取值" class="headerlink" title="&emsp;&emsp;&emsp;&emsp;2.requestParameter(“empName”)就会从这个map中取值"></a>&emsp;&emsp;&emsp;&emsp;2.requestParameter(“empName”)就会从这个map中取值</h4><h4 id="emsp-emsp-emsp-emsp-3-SpringMVC封装POJO对象的时候，会把POJO中每个属性的值，request-getParameter-“email”"><a href="#emsp-emsp-emsp-emsp-3-SpringMVC封装POJO对象的时候，会把POJO中每个属性的值，request-getParameter-“email”" class="headerlink" title="&emsp;&emsp;&emsp;&emsp;3.SpringMVC封装POJO对象的时候，会把POJO中每个属性的值，request.getParameter(“email”);"></a>&emsp;&emsp;&emsp;&emsp;3.SpringMVC封装POJO对象的时候，会把POJO中每个属性的值，request.getParameter(“email”);</h4><h4 id="emsp-emsp-AJAX发送PUT请求时："><a href="#emsp-emsp-AJAX发送PUT请求时：" class="headerlink" title="&emsp;&emsp;AJAX发送PUT请求时："></a>&emsp;&emsp;AJAX发送PUT请求时：</h4><h4 id="emsp-emsp-emsp-emsp-PUT请求：请求体中的数据，request-getParameter-“empName”-拿不到"><a href="#emsp-emsp-emsp-emsp-PUT请求：请求体中的数据，request-getParameter-“empName”-拿不到" class="headerlink" title="&emsp;&emsp;&emsp;&emsp;PUT请求：请求体中的数据，request.getParameter(“empName”)拿不到"></a>&emsp;&emsp;&emsp;&emsp;PUT请求：请求体中的数据，request.getParameter(“empName”)拿不到</h4><h4 id="emsp-emsp-emsp-emsp-Tomcat一看是PUT不会封装请求体中的数据为map，只有POST形式的请求才封装请求体为map"><a href="#emsp-emsp-emsp-emsp-Tomcat一看是PUT不会封装请求体中的数据为map，只有POST形式的请求才封装请求体为map" class="headerlink" title="&emsp;&emsp;&emsp;&emsp;Tomcat一看是PUT不会封装请求体中的数据为map，只有POST形式的请求才封装请求体为map"></a>&emsp;&emsp;&emsp;&emsp;Tomcat一看是PUT不会封装请求体中的数据为map，只有POST形式的请求才封装请求体为map</h4><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><h4 id="emsp-emsp-方法一：发送POST请求，在请求体中加上method字段"><a href="#emsp-emsp-方法一：发送POST请求，在请求体中加上method字段" class="headerlink" title="&emsp;&emsp;方法一：发送POST请求，在请求体中加上method字段"></a>&emsp;&emsp;方法一：发送POST请求，在请求体中加上method字段</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">"$&#123;APP_PATH&#125;/emp/"</span>+$(<span class="keyword">this</span>).attr(<span class="string">"edit-id"</span>),</span><br><span class="line">    type:<span class="string">"POST"</span>,</span><br><span class="line">    data:$(<span class="string">"#empUpdateModal form"</span>).serialize()+<span class="string">"&amp;method=PUT"</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        alert(data.msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-方法二：web-xml中添加过滤器，HttpPutFormContentFilter可以将请求体中的数据重新封装"><a href="#emsp-emsp-方法二：web-xml中添加过滤器，HttpPutFormContentFilter可以将请求体中的数据重新封装" class="headerlink" title="&emsp;&emsp;方法二：web.xml中添加过滤器，HttpPutFormContentFilter可以将请求体中的数据重新封装"></a>&emsp;&emsp;方法二：web.xml中添加过滤器，HttpPutFormContentFilter可以将请求体中的数据重新封装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 解决ajax发送put请求，实体封装失败问题 --&gt;</span><br><span class="line">&lt;filter&gt;</span><br><span class="line">  &lt;filter-name&gt;httpPutFormContentFilter&lt;/filter-name&gt;</span><br><span class="line">  &lt;filter-class&gt;org.springframework.web.filter.HttpPutFormContentFilter&lt;/filter-class&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">  &lt;filter-name&gt;httpPutFormContentFilter&lt;/filter-name&gt;</span><br><span class="line">  &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">&lt;/filter-mapping&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
        <category>SpringMVC</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot整合JSP时，访问jsp页面跳出保存页面</title>
    <url>/2020/03/30/SpringBoot%E6%95%B4%E5%90%88JSP%E6%97%B6%EF%BC%8C%E8%AE%BF%E9%97%AEjsp%E9%A1%B5%E9%9D%A2%E8%B7%B3%E5%87%BA%E4%BF%9D%E5%AD%98%E9%A1%B5%E9%9D%A2/</url>
    <content><![CDATA[<h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><h4 id="SpringBoot整合JSP时，访问jsp页面跳出保存页面"><a href="#SpringBoot整合JSP时，访问jsp页面跳出保存页面" class="headerlink" title="SpringBoot整合JSP时，访问jsp页面跳出保存页面"></a>SpringBoot整合JSP时，访问jsp页面跳出保存页面</h4><h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><h4 id="缺少JSP相关的依赖"><a href="#缺少JSP相关的依赖" class="headerlink" title="缺少JSP相关的依赖"></a>缺少JSP相关的依赖</h4><a id="more"></a>
<h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
        <category>SpringBoot</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>【模拟】计算器的改良</title>
    <url>/2020/03/30/%E3%80%90%E6%A8%A1%E6%8B%9F%E3%80%91%E8%AE%A1%E7%AE%97%E5%99%A8%E7%9A%84%E6%94%B9%E8%89%AF/</url>
    <content><![CDATA[<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><h4 id="NCL是一家专门从事计算器改良与升级的实验室，最近该实验室收到了某公司所委托的一个任务：需要在该公司某型号的计算器上加上解一元一次方程的功能。实验室将这个任务交给了一个刚进入的新手ZL先生。为了很好的完成这个任务，ZL先生首先研究了一些一元一次方程的实例："><a href="#NCL是一家专门从事计算器改良与升级的实验室，最近该实验室收到了某公司所委托的一个任务：需要在该公司某型号的计算器上加上解一元一次方程的功能。实验室将这个任务交给了一个刚进入的新手ZL先生。为了很好的完成这个任务，ZL先生首先研究了一些一元一次方程的实例：" class="headerlink" title="NCL是一家专门从事计算器改良与升级的实验室，最近该实验室收到了某公司所委托的一个任务：需要在该公司某型号的计算器上加上解一元一次方程的功能。实验室将这个任务交给了一个刚进入的新手ZL先生。为了很好的完成这个任务，ZL先生首先研究了一些一元一次方程的实例："></a>NCL是一家专门从事计算器改良与升级的实验室，最近该实验室收到了某公司所委托的一个任务：需要在该公司某型号的计算器上加上解一元一次方程的功能。实验室将这个任务交给了一个刚进入的新手ZL先生。为了很好的完成这个任务，ZL先生首先研究了一些一元一次方程的实例：</h4><a id="more"></a>
<h4 id="4-3x-8"><a href="#4-3x-8" class="headerlink" title="4+3x=8"></a>4+3x=8</h4><h4 id="6a-5-1-2-2a"><a href="#6a-5-1-2-2a" class="headerlink" title="6a-5+1=2-2a"></a>6a-5+1=2-2a</h4><h4 id="5-12y-0"><a href="#5-12y-0" class="headerlink" title="-5+12y=0"></a>-5+12y=0</h4><h4 id="ZL先生被主管告之，在计算器上键入的一个一元一次方程中，只包含整数、小写字母及-、-、-这三个数学符号（当然，符号”─”既可作减号，也可作负号）。方程中并没有括号，也没有除号，方程中的字母表示未知数。"><a href="#ZL先生被主管告之，在计算器上键入的一个一元一次方程中，只包含整数、小写字母及-、-、-这三个数学符号（当然，符号”─”既可作减号，也可作负号）。方程中并没有括号，也没有除号，方程中的字母表示未知数。" class="headerlink" title="ZL先生被主管告之，在计算器上键入的一个一元一次方程中，只包含整数、小写字母及+、-、=这三个数学符号（当然，符号”─”既可作减号，也可作负号）。方程中并没有括号，也没有除号，方程中的字母表示未知数。"></a>ZL先生被主管告之，在计算器上键入的一个一元一次方程中，只包含整数、小写字母及+、-、=这三个数学符号（当然，符号”─”既可作减号，也可作负号）。方程中并没有括号，也没有除号，方程中的字母表示未知数。</h4><h4 id="编写程序，解输入的一元一次方程，将解方程的结果（精确至小数点后三位）输出至屏幕。"><a href="#编写程序，解输入的一元一次方程，将解方程的结果（精确至小数点后三位）输出至屏幕。" class="headerlink" title="编写程序，解输入的一元一次方程，将解方程的结果（精确至小数点后三位）输出至屏幕。"></a>编写程序，解输入的一元一次方程，将解方程的结果（精确至小数点后三位）输出至屏幕。</h4><h4 id="你可假设对键入的方程的正确性的判断是由另一个程序员在做，或者说可认为键入的一元一次方程均为合法的，且有唯一实数解。"><a href="#你可假设对键入的方程的正确性的判断是由另一个程序员在做，或者说可认为键入的一元一次方程均为合法的，且有唯一实数解。" class="headerlink" title="你可假设对键入的方程的正确性的判断是由另一个程序员在做，或者说可认为键入的一元一次方程均为合法的，且有唯一实数解。"></a>你可假设对键入的方程的正确性的判断是由另一个程序员在做，或者说可认为键入的一元一次方程均为合法的，且有唯一实数解。</h4><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><h4 id="每个测试文件只包含一组测试数据，每组输入一个字符串，表示一个一元一次方程。"><a href="#每个测试文件只包含一组测试数据，每组输入一个字符串，表示一个一元一次方程。" class="headerlink" title="每个测试文件只包含一组测试数据，每组输入一个字符串，表示一个一元一次方程。"></a>每个测试文件只包含一组测试数据，每组输入一个字符串，表示一个一元一次方程。</h4><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><h4 id="对于每组输入数据，解方程的结果（精确至小数点后三位）输出至屏幕。"><a href="#对于每组输入数据，解方程的结果（精确至小数点后三位）输出至屏幕。" class="headerlink" title="对于每组输入数据，解方程的结果（精确至小数点后三位）输出至屏幕。"></a>对于每组输入数据，解方程的结果（精确至小数点后三位）输出至屏幕。</h4><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><h4 id="6a-5-1-2-2a-1"><a href="#6a-5-1-2-2a-1" class="headerlink" title="6a-5+1=2-2a"></a>6a-5+1=2-2a</h4><h2 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h2><h4 id="a-0-750"><a href="#a-0-750" class="headerlink" title="a=0.750"></a>a=0.750</h4><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">char</span> input[<span class="number">1000</span>];</span><br><span class="line">	<span class="comment">//记录未知数X</span></span><br><span class="line">	<span class="keyword">char</span> x; </span><br><span class="line">	<span class="comment">//是否在左，是否为正 </span></span><br><span class="line">	<span class="keyword">int</span> isLeft=<span class="number">1</span>,isPo=<span class="number">1</span>;</span><br><span class="line">	<span class="comment">//项，常数 </span></span><br><span class="line">	<span class="keyword">int</span> alNum=<span class="number">0</span>,diNum=<span class="number">0</span>;</span><br><span class="line">	<span class="comment">//用于计数 </span></span><br><span class="line">	<span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,input);</span><br><span class="line">	<span class="keyword">int</span> len=<span class="built_in">strlen</span>(input);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; ++i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">isdigit</span>(input[i]))&#123;</span><br><span class="line">			num=num*<span class="number">10</span>+(input[i]-<span class="string">'0'</span>);</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">isalpha</span>(input[i]))&#123;</span><br><span class="line">			x=input[i];</span><br><span class="line">			<span class="keyword">if</span>(num==<span class="number">0</span>)&#123;</span><br><span class="line">				alNum=alNum+(isPo); <span class="comment">//a=2a</span></span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				alNum+=num*isPo*isLeft;</span><br><span class="line">			&#125;</span><br><span class="line">			num=<span class="number">0</span>;</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="keyword">if</span>(input[i]==<span class="string">'+'</span>)&#123;</span><br><span class="line">			diNum+=num*isLeft*isPo;</span><br><span class="line">			isPo=<span class="number">1</span>;</span><br><span class="line">			num=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(input[i]==<span class="string">'-'</span>)&#123;</span><br><span class="line">			diNum+=num*isLeft*isPo;</span><br><span class="line">			isPo=<span class="number">-1</span>;</span><br><span class="line">			num=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(input[i]==<span class="string">'='</span>)&#123;</span><br><span class="line">			diNum+=num*isLeft*isPo;</span><br><span class="line">			isLeft=<span class="number">-1</span>;</span><br><span class="line">			isPo=<span class="number">1</span>;</span><br><span class="line">			num=<span class="number">0</span>;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	diNum+=num*isLeft*isPo;<span class="comment">//a=1</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%c="</span>,x);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.3lf"</span>,(<span class="keyword">double</span>)(-diNum)/(<span class="keyword">double</span>)alNum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
        <category>模拟</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>【贪心】费用最少</title>
    <url>/2020/03/30/%E3%80%90%E8%B4%AA%E5%BF%83%E3%80%91%E8%B4%B9%E7%94%A8%E6%9C%80%E5%B0%91/</url>
    <content><![CDATA[<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><h4 id="小墨老师总是不及时做作业，所以他总有很多的作业要做。每个老师都给了他一个完成作业的最后期限，如果他超过期限交作业，老师就会在他的期末评价中扣分。假设做每一门作业总是要一天。小墨老师希望你能够帮助他安排做作业的一个顺序，以便能够被扣掉的分数最少。"><a href="#小墨老师总是不及时做作业，所以他总有很多的作业要做。每个老师都给了他一个完成作业的最后期限，如果他超过期限交作业，老师就会在他的期末评价中扣分。假设做每一门作业总是要一天。小墨老师希望你能够帮助他安排做作业的一个顺序，以便能够被扣掉的分数最少。" class="headerlink" title="小墨老师总是不及时做作业，所以他总有很多的作业要做。每个老师都给了他一个完成作业的最后期限，如果他超过期限交作业，老师就会在他的期末评价中扣分。假设做每一门作业总是要一天。小墨老师希望你能够帮助他安排做作业的一个顺序，以便能够被扣掉的分数最少。"></a>小墨老师总是不及时做作业，所以他总有很多的作业要做。每个老师都给了他一个完成作业的最后期限，如果他超过期限交作业，老师就会在他的期末评价中扣分。假设做每一门作业总是要一天。小墨老师希望你能够帮助他安排做作业的一个顺序，以便能够被扣掉的分数最少。</h4><a id="more"></a>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><h4 id="输入包含了多个测试用例。输入的第一行是一个整数T，代表测试用例的个数。接下来的就是T个测试用例的输入。每个测试用例都从一个正整数N-1≤N≤1000-开始，代表了作业的数目。接下来有2行。第一行包含N个整数，分别代表各个作业提交的最后期限；第二行也有N个整数，即对应于各个作业操过时间提交的扣分。"><a href="#输入包含了多个测试用例。输入的第一行是一个整数T，代表测试用例的个数。接下来的就是T个测试用例的输入。每个测试用例都从一个正整数N-1≤N≤1000-开始，代表了作业的数目。接下来有2行。第一行包含N个整数，分别代表各个作业提交的最后期限；第二行也有N个整数，即对应于各个作业操过时间提交的扣分。" class="headerlink" title="输入包含了多个测试用例。输入的第一行是一个整数T，代表测试用例的个数。接下来的就是T个测试用例的输入。每个测试用例都从一个正整数N(1≤N≤1000)开始，代表了作业的数目。接下来有2行。第一行包含N个整数，分别代表各个作业提交的最后期限；第二行也有N个整数，即对应于各个作业操过时间提交的扣分。"></a>输入包含了多个测试用例。输入的第一行是一个整数T，代表测试用例的个数。接下来的就是T个测试用例的输入。每个测试用例都从一个正整数N(1≤N≤1000)开始，代表了作业的数目。接下来有2行。第一行包含N个整数，分别代表各个作业提交的最后期限；第二行也有N个整数，即对应于各个作业操过时间提交的扣分。</h4><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><h4 id="对每一个测试用例，应该在一行中输出最小的扣分数。"><a href="#对每一个测试用例，应该在一行中输出最小的扣分数。" class="headerlink" title="对每一个测试用例，应该在一行中输出最小的扣分数。"></a>对每一个测试用例，应该在一行中输出最小的扣分数。</h4><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><h4 id="3-3-3"><a href="#3-3-3" class="headerlink" title="3 3 3"></a>3 3 3</h4><h4 id="10-5-1"><a href="#10-5-1" class="headerlink" title="10 5 1"></a>10 5 1</h4><h4 id="3-1"><a href="#3-1" class="headerlink" title="3"></a>3</h4><h4 id="1-3-1"><a href="#1-3-1" class="headerlink" title="1 3 1"></a>1 3 1</h4><h4 id="6-2-3"><a href="#6-2-3" class="headerlink" title="6 2 3"></a>6 2 3</h4><h2 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h2><h4 id="0"><a href="#0" class="headerlink" title="0"></a>0</h4><h4 id="3-2"><a href="#3-2" class="headerlink" title="3"></a>3</h4><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><h4 id="这道题主要是在合理的期限内做分数最高的作业，也就是对作业进行排序。优先扣的分数高的，在分数相同情况下选择期限最短的。"><a href="#这道题主要是在合理的期限内做分数最高的作业，也就是对作业进行排序。优先扣的分数高的，在分数相同情况下选择期限最短的。" class="headerlink" title="这道题主要是在合理的期限内做分数最高的作业，也就是对作业进行排序。优先扣的分数高的，在分数相同情况下选择期限最短的。"></a>这道题主要是在合理的期限内做分数最高的作业，也就是对作业进行排序。优先扣的分数高的，在分数相同情况下选择期限最短的。</h4><h2 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">homework</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> endline;</span><br><span class="line">	<span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(homework h1,homework h2)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(h1.score!=h2.score)&#123;</span><br><span class="line">		<span class="keyword">return</span> h1.score&gt;h2.score;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> h1.endline&lt;h2.endline;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> T,N;</span><br><span class="line">	homework h[<span class="number">1001</span>];</span><br><span class="line">	<span class="keyword">int</span> isHave[<span class="number">100001</span>];<span class="comment">//用于记录当天是否已有任务 </span></span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		<span class="keyword">int</span> num=<span class="number">0</span>;<span class="comment">//扣分总和 </span></span><br><span class="line">		<span class="built_in">memset</span>(isHave,<span class="number">0</span>,<span class="keyword">sizeof</span>(isHave));</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;++i)</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;h[i].endline;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;++i)</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;h[i].score;</span><br><span class="line">		sort(h,h+N,cmp);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;++i)&#123;</span><br><span class="line">			<span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=h[i].endline;j&gt;<span class="number">0</span>;j--)&#123;</span><br><span class="line">				<span class="keyword">if</span>(!isHave[j])&#123;</span><br><span class="line">					flag=<span class="number">1</span>;</span><br><span class="line">					isHave[j]=<span class="number">1</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">				num+=h[i].score;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;num&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法</category>
        <category>贪心</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>贪心</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker基本命令（一）</title>
    <url>/2019/11/30/Docker%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="所在环境："><a href="#所在环境：" class="headerlink" title="所在环境："></a>所在环境：</h2><h4 id="emsp-emsp-Linux-Centos7-内核版本大于3-10"><a href="#emsp-emsp-Linux-Centos7-内核版本大于3-10" class="headerlink" title="&emsp;&emsp;Linux Centos7 内核版本大于3.10"></a>&emsp;&emsp;Linux Centos7 内核版本大于3.10</h4><a id="more"></a>
<h2 id="Docker基本命令："><a href="#Docker基本命令：" class="headerlink" title="Docker基本命令："></a>Docker基本命令：</h2><h4 id="emsp-emsp-安装"><a href="#emsp-emsp-安装" class="headerlink" title="&emsp;&emsp;安装"></a>&emsp;&emsp;安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install docker</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-启动"><a href="#emsp-emsp-启动" class="headerlink" title="&emsp;&emsp;启动"></a>&emsp;&emsp;启动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-关闭"><a href="#emsp-emsp-关闭" class="headerlink" title="&emsp;&emsp;关闭"></a>&emsp;&emsp;关闭</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure>
<h2 id="镜像操作命令："><a href="#镜像操作命令：" class="headerlink" title="镜像操作命令："></a>镜像操作命令：</h2><h4 id="emsp-emsp-镜像检索"><a href="#emsp-emsp-镜像检索" class="headerlink" title="&emsp;&emsp;镜像检索"></a>&emsp;&emsp;镜像检索</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker search 关键字</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-镜像拉取"><a href="#emsp-emsp-镜像拉取" class="headerlink" title="&emsp;&emsp;镜像拉取"></a>&emsp;&emsp;镜像拉取</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull 镜像名:标签号</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-查看镜像"><a href="#emsp-emsp-查看镜像" class="headerlink" title="&emsp;&emsp;查看镜像"></a>&emsp;&emsp;查看镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-删除镜像"><a href="#emsp-emsp-删除镜像" class="headerlink" title="&emsp;&emsp;删除镜像"></a>&emsp;&emsp;删除镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi 镜像id</span><br></pre></td></tr></table></figure>
<h2 id="容器操作命令："><a href="#容器操作命令：" class="headerlink" title="容器操作命令："></a>容器操作命令：</h2><h4 id="emsp-emsp-根据镜像运行容器（-d后台运行，-p新端口号：映射容器内部端口）"><a href="#emsp-emsp-根据镜像运行容器（-d后台运行，-p新端口号：映射容器内部端口）" class="headerlink" title="&emsp;&emsp;根据镜像运行容器（-d后台运行，-p新端口号：映射容器内部端口）"></a>&emsp;&emsp;根据镜像运行容器（-d后台运行，-p新端口号：映射容器内部端口）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run --name 自定义容器名 -d -p 新端口:映射端口 镜像名:tag号（默认latest）</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-列表（-a可以查看所有容器）"><a href="#emsp-emsp-列表（-a可以查看所有容器）" class="headerlink" title="&emsp;&emsp;列表（-a可以查看所有容器）"></a>&emsp;&emsp;列表（-a可以查看所有容器）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-停止容器"><a href="#emsp-emsp-停止容器" class="headerlink" title="&emsp;&emsp;停止容器"></a>&emsp;&emsp;停止容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker stop 容器的id</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-启动容器"><a href="#emsp-emsp-启动容器" class="headerlink" title="&emsp;&emsp;启动容器"></a>&emsp;&emsp;启动容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker start 容器的id</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-删除删除指定容器"><a href="#emsp-emsp-删除删除指定容器" class="headerlink" title="&emsp;&emsp;删除删除指定容器"></a>&emsp;&emsp;删除删除指定容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker rm 容器id</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-容器日志（-tf显示日志，–tail-number-要显示的日志条数）"><a href="#emsp-emsp-容器日志（-tf显示日志，–tail-number-要显示的日志条数）" class="headerlink" title="&emsp;&emsp;容器日志（-tf显示日志，–tail number 要显示的日志条数）"></a>&emsp;&emsp;容器日志（-tf显示日志，–tail number 要显示的日志条数）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker logs -tf --tail number 容器id</span><br></pre></td></tr></table></figure>
<hr>
<!-- ###### &emsp;&emsp;晚上和室友站在阳台上抽了第一根烟，很涩。抽完头有些昏沉沉的，也想了很多。你的喜欢我当真承受不起，在你全盘否定我的感情的时候，我也想通了。现在这样也好，这样对你我来说都是一个好的选择吧。
<h6 align="right">2019/11/30</h6> -->

]]></content>
      <categories>
        <category>运维</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Elipse中SpringMVC加上注解没有提示</title>
    <url>/2019/11/28/Elipse%E4%B8%ADSpringMVC%E5%8A%A0%E4%B8%8A%E6%B3%A8%E8%A7%A3%E6%B2%A1%E6%9C%89%E6%8F%90%E7%A4%BA/</url>
    <content><![CDATA[<h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><h4 id="Elipse中加上SpringMVC相关注解时，没有代码提示"><a href="#Elipse中加上SpringMVC相关注解时，没有代码提示" class="headerlink" title="Elipse中加上SpringMVC相关注解时，没有代码提示"></a>Elipse中加上SpringMVC相关注解时，没有代码提示</h4><a id="more"></a>
<h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><h4 id="取消勾选红圈选项"><a href="#取消勾选红圈选项" class="headerlink" title="取消勾选红圈选项"></a>取消勾选红圈选项</h4><p><img src="/images/SpringMVC/4.png" alt="Yoyou"></p>
]]></content>
      <categories>
        <category>Java</category>
        <category>SpringMVC</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>Git相关命令</title>
    <url>/2019/11/11/Git%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="所在环境："><a href="#所在环境：" class="headerlink" title="所在环境："></a>所在环境：</h2><h4 id="emsp-emsp-Windows-Git-bash"><a href="#emsp-emsp-Windows-Git-bash" class="headerlink" title="&emsp;&emsp;Windows Git bash"></a>&emsp;&emsp;Windows Git bash</h4><h2 id="基本命令："><a href="#基本命令：" class="headerlink" title="基本命令："></a>基本命令：</h2><h4 id="初始化一个git仓库"><a href="#初始化一个git仓库" class="headerlink" title="初始化一个git仓库"></a>初始化一个git仓库</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="克隆项目到本地"><a href="#克隆项目到本地" class="headerlink" title="克隆项目到本地"></a>克隆项目到本地</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#url</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/仓库名.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssh</span></span><br><span class="line">git <span class="built_in">clone</span> git@gitee.com:仓库名.git</span><br></pre></td></tr></table></figure>
<h4 id="显示所有本地分支"><a href="#显示所有本地分支" class="headerlink" title="显示所有本地分支"></a>显示所有本地分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure>
<h4 id="切换到分支"><a href="#切换到分支" class="headerlink" title="切换到分支"></a>切换到分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout 分支名</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果不存在该分支，新建分支</span></span><br><span class="line">git checkout -b 分支名</span><br></pre></td></tr></table></figure>
<h4 id="把工作时的所有变化提交到暂存区，不包括被删除的文件"><a href="#把工作时的所有变化提交到暂存区，不包括被删除的文件" class="headerlink" title="把工作时的所有变化提交到暂存区，不包括被删除的文件"></a>把工作时的所有变化提交到暂存区，不包括被删除的文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<h4 id="显示暂存区状态"><a href="#显示暂存区状态" class="headerlink" title="显示暂存区状态"></a>显示暂存区状态</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
<h4 id="添加提交信息"><a href="#添加提交信息" class="headerlink" title="添加提交信息"></a>添加提交信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">'提交信息'</span></span><br></pre></td></tr></table></figure>

<h4 id="推送内容到GitHub远程仓库"><a href="#推送内容到GitHub远程仓库" class="headerlink" title="推送内容到GitHub远程仓库"></a>推送内容到GitHub远程仓库</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push</span><br><span class="line"></span><br><span class="line"><span class="comment">#推送到指定分支</span></span><br><span class="line">git push origin 分支名</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>其它</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>其它</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Liunx常用命令（三）</title>
    <url>/2019/11/11/Liunx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<p><font color="gray" face="黑体" size=5>  more</font></p>
<h4 align="center">-- 显示文件内容，带分页</h4>

<a id="more"></a>
<h5 id="–-more-文件名-分页，空格下一页，pgup上一页"><a href="#–-more-文件名-分页，空格下一页，pgup上一页" class="headerlink" title="– more 文件名 [分页，空格下一页，pgup上一页]"></a>– more 文件名 [分页，空格下一页，pgup上一页]</h5><hr>
<p><font color="gray" face="黑体" size=5>  less</font></p>
<h4 align="center">-- 显示文件内容带分页</h4>

<hr>
<p><font color="gray" face="黑体" size=5>  grep</font></p>
<h4 align="center">-- 查询文件内容</h4>

<h5 id="–-grep-“关键词”-文件名-查询"><a href="#–-grep-“关键词”-文件名-查询" class="headerlink" title="– grep “关键词” 文件名 [查询]"></a>– grep “关键词” 文件名 [查询]</h5><hr>
<p><font color="gray" face="黑体" size=5> | </font></p>
<h4 align="center">-- 管道命令，把上一个命令给|后的一个命令执行</h4>

]]></content>
      <categories>
        <category>运维</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Liunx常用命令（二）</title>
    <url>/2019/11/11/Liunx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<p><font color="gray" face="黑体" size=5>  mkdir</font></p>
<h4 align="center">-- 创建空目录</h4>

<a id="more"></a>

<hr>
<p><font color="gray" face="黑体" size=5>  rmdir</font></p>
<h4 align="center">-- 删除空目录</h4>

<hr>
<p><font color="gray" face="黑体" size=5>  touch</font></p>
<h4 align="center">-- 建立空文件</h4>



<hr>
<p><font color="gray" face="黑体" size=5>  cp</font></p>
<h4 align="center">-- 复制命令</h4>

<h5 id="–-cp-file1-dir1-【复制文件到指定目录下】"><a href="#–-cp-file1-dir1-【复制文件到指定目录下】" class="headerlink" title="– cp file1 dir1 【复制文件到指定目录下】"></a>– cp file1 dir1 【复制文件到指定目录下】</h5><h5 id="–-cp-r-dir1-dir2-【递归复制目录（复制子目录信息）】"><a href="#–-cp-r-dir1-dir2-【递归复制目录（复制子目录信息）】" class="headerlink" title="– cp -r dir1 dir2 【递归复制目录（复制子目录信息）】"></a>– cp -r dir1 dir2 【递归复制目录（复制子目录信息）】</h5><hr>
<p><font color="gray" face="黑体" size=5>  mv</font></p>
<h4 align="center">-- 移动文件和改文件名</h4>

<hr>
<p><font color="gray" face="黑体" size=5>  rm</font></p>
<h4 align="center">-- 删除文件和目录</h4>

<h5 id="–-rm-rf-【删除所有内容（包括目录和文件），r递归，f强制】"><a href="#–-rm-rf-【删除所有内容（包括目录和文件），r递归，f强制】" class="headerlink" title="– rm -rf* 【删除所有内容（包括目录和文件），r递归，f强制】"></a>– rm -rf* 【删除所有内容（包括目录和文件），r递归，f强制】</h5><hr>
<p><font color="gray" face="黑体" size=5>  ln</font></p>
<h4 align="center">-- 建立符号连接</h4>

<h5 id="–-s-源目标"><a href="#–-s-源目标" class="headerlink" title="– -s  源目标"></a>– -s  源目标</h5><h5 id="–-s-etc-inittab-inittab-【inittab指向实际文件-etc-inittab】"><a href="#–-s-etc-inittab-inittab-【inittab指向实际文件-etc-inittab】" class="headerlink" title="– -s /etc/inittab inittab 【inittab指向实际文件/etc/inittab】"></a>– -s /etc/inittab inittab 【inittab指向实际文件/etc/inittab】</h5>]]></content>
      <categories>
        <category>运维</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令（一）</title>
    <url>/2019/11/11/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p><font color="gray" face="黑体" size=5>  init [0123456]</font></p>
<h4 align="center">-- 指定运行级别</h4>

<h5 id="emsp-emsp-–0：关机"><a href="#emsp-emsp-–0：关机" class="headerlink" title="&emsp;&emsp;–0：关机"></a>&emsp;&emsp;–0：关机</h5><h5 id="emsp-emsp-–1：单用户"><a href="#emsp-emsp-–1：单用户" class="headerlink" title="&emsp;&emsp;–1：单用户"></a>&emsp;&emsp;–1：单用户</h5><a id="more"></a>
<h5 id="emsp-emsp-–2：多用户状态没有网络服务"><a href="#emsp-emsp-–2：多用户状态没有网络服务" class="headerlink" title="&emsp;&emsp;–2：多用户状态没有网络服务"></a>&emsp;&emsp;–2：多用户状态没有网络服务</h5><h5 id="emsp-emsp-–3-：多用户状态有网络服务"><a href="#emsp-emsp-–3-：多用户状态有网络服务" class="headerlink" title="&emsp;&emsp;–3*：多用户状态有网络服务"></a>&emsp;&emsp;–3*：多用户状态有网络服务</h5><h5 id="emsp-emsp-–4：系统未使用保留给用户"><a href="#emsp-emsp-–4：系统未使用保留给用户" class="headerlink" title="&emsp;&emsp;–4：系统未使用保留给用户"></a>&emsp;&emsp;–4：系统未使用保留给用户</h5><h5 id="emsp-emsp-–5-：图形界面"><a href="#emsp-emsp-–5-：图形界面" class="headerlink" title="&emsp;&emsp;–5*：图形界面"></a>&emsp;&emsp;–5*：图形界面</h5><h5 id="emsp-emsp-6：系统重启"><a href="#emsp-emsp-6：系统重启" class="headerlink" title="&emsp;&emsp;-6：系统重启"></a>&emsp;&emsp;-6：系统重启</h5><h5 id="emsp-emsp-修改默认运行级别：vi-etc-inittab，进入查看命令"><a href="#emsp-emsp-修改默认运行级别：vi-etc-inittab，进入查看命令" class="headerlink" title="&emsp;&emsp; 修改默认运行级别：vi /etc/inittab，进入查看命令"></a>&emsp;&emsp; 修改默认运行级别：vi /etc/inittab，进入查看命令</h5><hr>
<p><font color="gray" face="黑体" size=5>  pwd</font></p>
<h4 align="center">-- 显示当前工作目录</h4>

<hr>
<p><font color="gray" face="黑体" size=5>  cd</font></p>
<h4 align="center">-- 改变目录</h4>

<hr>
<p><font color="gray" face="黑体" size=5>  ls</font></p>
<h4 align="center">-- 列出文件和目录</h4>

<h5 id="emsp-emsp-–-a：显示隐藏文件"><a href="#emsp-emsp-–-a：显示隐藏文件" class="headerlink" title="&emsp;&emsp;– -a：显示隐藏文件"></a>&emsp;&emsp;– -a：显示隐藏文件</h5><h5 id="emsp-emsp-–-l：显示长列表格式"><a href="#emsp-emsp-–-l：显示长列表格式" class="headerlink" title="&emsp;&emsp;– -l：显示长列表格式"></a>&emsp;&emsp;– -l：显示长列表格式</h5><h5 id="emsp-emsp-–-al：显示长列表格式隐藏文件"><a href="#emsp-emsp-–-al：显示长列表格式隐藏文件" class="headerlink" title="&emsp;&emsp;– -al：显示长列表格式隐藏文件"></a>&emsp;&emsp;– -al：显示长列表格式隐藏文件</h5>]]></content>
      <categories>
        <category>运维</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC的PUT、DELETE响应问题</title>
    <url>/2019/11/10/SpringMVC%E7%9A%84PUT%E3%80%81DELETE%E5%93%8D%E5%BA%94%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p><img src="/images/SpringMVC/1.png" alt="Yoyou"></p>
<a id="more"></a>
<p><img src="/images/SpringMVC/2.png" alt="Yoyou"></p>
<h4 id="浏览器不响应，控制台响应"><a href="#浏览器不响应，控制台响应" class="headerlink" title="浏览器不响应，控制台响应"></a>浏览器不响应，控制台响应</h4><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><h4 id="1）tomcat更换至7及以下版本"><a href="#1）tomcat更换至7及以下版本" class="headerlink" title="1）tomcat更换至7及以下版本"></a>1）tomcat更换至7及以下版本</h4><h4 id="2）"><a href="#2）" class="headerlink" title="2）"></a>2）</h4><p><img src="/images/SpringMVC/3.png" alt="Yoyou"></p>
]]></content>
      <categories>
        <category>Java</category>
        <category>SpringMVC</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>SpringMVC</tag>
        <tag>Restful</tag>
      </tags>
  </entry>
  <entry>
    <title>二级MS Office公共基础知识点整理</title>
    <url>/2019/11/10/%E4%BA%8C%E7%BA%A7MS%20Office%E5%85%AC%E5%85%B1%E5%9F%BA%E7%A1%80%E9%A2%98%E8%A7%A3%E6%9E%90%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h2 id="一：计算机的前世今生："><a href="#一：计算机的前世今生：" class="headerlink" title="一：计算机的前世今生："></a>一：计算机的前世今生：</h2><h4 id="emsp-1-世界上第一台计算机，1946年，冯·诺依曼，ENIAC（电子数字积分计算机）。该计算机原理要点：二进制、存储程序。硬件五大基本构建：运算器、控制器、存储器、输入设备、输出设备。"><a href="#emsp-1-世界上第一台计算机，1946年，冯·诺依曼，ENIAC（电子数字积分计算机）。该计算机原理要点：二进制、存储程序。硬件五大基本构建：运算器、控制器、存储器、输入设备、输出设备。" class="headerlink" title="&emsp;1.世界上第一台计算机，1946年，冯·诺依曼，ENIAC（电子数字积分计算机）。该计算机原理要点：二进制、存储程序。硬件五大基本构建：运算器、控制器、存储器、输入设备、输出设备。"></a>&emsp;1.世界上第一台计算机，1946年，冯·诺依曼，ENIAC（电子数字积分计算机）。该计算机原理要点：二进制、存储程序。硬件五大基本构建：运算器、控制器、存储器、输入设备、输出设备。</h4><a id="more"></a>
<h4 id="emsp-2-计算机主要元件发展顺序：电子管–-gt-晶体管–-gt-中小规模集成电路–-gt-大规模、超大规模集成电路。"><a href="#emsp-2-计算机主要元件发展顺序：电子管–-gt-晶体管–-gt-中小规模集成电路–-gt-大规模、超大规模集成电路。" class="headerlink" title="&emsp;2.计算机主要元件发展顺序：电子管–&gt;晶体管–&gt;中小规模集成电路–&gt;大规模、超大规模集成电路。"></a>&emsp;2.计算机主要元件发展顺序：电子管–&gt;晶体管–&gt;中小规模集成电路–&gt;大规模、超大规模集成电路。</h4><h4 id="emsp-3-计算机最早应用领域：数值计算。"><a href="#emsp-3-计算机最早应用领域：数值计算。" class="headerlink" title="&emsp;3.计算机最早应用领域：数值计算。"></a>&emsp;3.计算机最早应用领域：数值计算。</h4><h4 id="emsp-4-计算机辅助英文缩写和中文对照：计算机辅助设计-（CAD），计算机辅助制造-（CAM），计算机辅助教育-（CAI），计算机辅助技术-（CAT），计算机集成制造系统（CIMS）。"><a href="#emsp-4-计算机辅助英文缩写和中文对照：计算机辅助设计-（CAD），计算机辅助制造-（CAM），计算机辅助教育-（CAI），计算机辅助技术-（CAT），计算机集成制造系统（CIMS）。" class="headerlink" title="&emsp;4.计算机辅助英文缩写和中文对照：计算机辅助设计-（CAD），计算机辅助制造-（CAM），计算机辅助教育-（CAI），计算机辅助技术-（CAT），计算机集成制造系统（CIMS）。"></a>&emsp;4.计算机辅助英文缩写和中文对照：计算机辅助设计-（CAD），计算机辅助制造-（CAM），计算机辅助教育-（CAI），计算机辅助技术-（CAT），计算机集成制造系统（CIMS）。</h4><hr>
<h2 id="二：信息的表示与存储："><a href="#二：信息的表示与存储：" class="headerlink" title="二：信息的表示与存储："></a>二：信息的表示与存储：</h2><h4 id="emsp-1-汉字的内码-汉字的国际码-8080H"><a href="#emsp-1-汉字的内码-汉字的国际码-8080H" class="headerlink" title="&emsp;1.汉字的内码=汉字的国际码+8080H"></a>&emsp;1.汉字的内码=汉字的国际码+8080H</h4><h4 id="emsp-2-内码：计算机内部对汉字进行存储、处理的汉字代码。–外码：通过键盘输入的内容。–地址码：字库中每一个汉字的字形都有一个地址码。"><a href="#emsp-2-内码：计算机内部对汉字进行存储、处理的汉字代码。–外码：通过键盘输入的内容。–地址码：字库中每一个汉字的字形都有一个地址码。" class="headerlink" title="&emsp;2.-内码：计算机内部对汉字进行存储、处理的汉字代码。–外码：通过键盘输入的内容。–地址码：字库中每一个汉字的字形都有一个地址码。"></a>&emsp;2.-内码：计算机<big>内部</big>对汉字进行存储、处理的汉字代码。–外码：通过键盘输入的内容。–地址码：字库中每一个汉字的字形都有一个地址码。</h4><hr>
<h2 id="三：计算机硬件系统："><a href="#三：计算机硬件系统：" class="headerlink" title="三：计算机硬件系统："></a>三：计算机硬件系统：</h2><h4 id="emsp-1-CPU主要的两大部件：运算器（性能指标：字长、运算速度。通常单位：MIPS。基本功能：接收数据并完成程序指令指定的基于二进制数的算术运算符或逻辑运算。）、控制器（基本功能：控制机器各个部件协调一致工作。）。"><a href="#emsp-1-CPU主要的两大部件：运算器（性能指标：字长、运算速度。通常单位：MIPS。基本功能：接收数据并完成程序指令指定的基于二进制数的算术运算符或逻辑运算。）、控制器（基本功能：控制机器各个部件协调一致工作。）。" class="headerlink" title="&emsp;1.CPU主要的两大部件：运算器（性能指标：字长、运算速度。通常单位：MIPS。基本功能：接收数据并完成程序指令指定的基于二进制数的算术运算符或逻辑运算。）、控制器（基本功能：控制机器各个部件协调一致工作。）。"></a>&emsp;1.CPU主要的两大部件：<u>运算器</u>（<em>性能指标：字长、运算速度。通常单位：MIPS。基本功能：接收数据并完成程序指令指定的基于二进制数的算术运算符或逻辑运算。</em>）、<u>控制器</u>（<em>基本功能：控制机器各个部件协调一致工作。</em>）。</h4><h4 id="emsp-2-主频是用来表示CPU内核工作的时钟频率。"><a href="#emsp-2-主频是用来表示CPU内核工作的时钟频率。" class="headerlink" title="&emsp;2.主频是用来表示CPU内核工作的时钟频率。"></a>&emsp;2.<u>主频</u>是用来表示CPU内核工作的时钟频率。</h4><h4 id="emsp-3-光盘分为两类：只读型光盘（CD-RAM、DVD-RAM）、可记录型光盘。"><a href="#emsp-3-光盘分为两类：只读型光盘（CD-RAM、DVD-RAM）、可记录型光盘。" class="headerlink" title="&emsp;3.光盘分为两类：只读型光盘（CD-RAM、DVD-RAM）、可记录型光盘。"></a>&emsp;3.光盘分为两类：只读型光盘（CD-RAM、DVD-RAM）、可记录型光盘。</h4><h4 id="emsp-4-存储器中，存取速度最快的是：RAM。"><a href="#emsp-4-存储器中，存取速度最快的是：RAM。" class="headerlink" title="&emsp;4.存储器中，存取速度最快的是：RAM。"></a>&emsp;4.存储器中，存取速度最快的是：RAM。</h4><h4 id="emsp-5-既可作为输入设备，也能作为输出设备的是调制解调器、光盘刻录机、磁盘驱动器。"><a href="#emsp-5-既可作为输入设备，也能作为输出设备的是调制解调器、光盘刻录机、磁盘驱动器。" class="headerlink" title="&emsp;5.既可作为输入设备，也能作为输出设备的是调制解调器、光盘刻录机、磁盘驱动器。"></a>&emsp;5.既可作为输入设备，也能作为输出设备的是调制解调器、光盘刻录机、磁盘驱动器。</h4><h4 id="emsp-6-现代计算机普遍采用总线结构（数据总线，控制总线，地址总线），与数据总线位数对应相同的部件是CPU。"><a href="#emsp-6-现代计算机普遍采用总线结构（数据总线，控制总线，地址总线），与数据总线位数对应相同的部件是CPU。" class="headerlink" title="&emsp;6.现代计算机普遍采用总线结构（数据总线，控制总线，地址总线），与数据总线位数对应相同的部件是CPU。"></a>&emsp;6.现代计算机普遍采用总线结构（数据总线，控制总线，地址总线），与数据总线位数对应相同的部件是CPU。</h4><h4 id="emsp-7-USB-2-0接口理论最快传输速率480Mbps，USB-3-0-–-gt-5-0Gbps，USB-3-1-–-gt-10Gbps。"><a href="#emsp-7-USB-2-0接口理论最快传输速率480Mbps，USB-3-0-–-gt-5-0Gbps，USB-3-1-–-gt-10Gbps。" class="headerlink" title="&emsp;7.USB 2.0接口理论最快传输速率480Mbps，USB 3.0 –&gt; 5.0Gbps，USB 3.1 –&gt; 10Gbps。"></a>&emsp;7.USB 2.0接口理论最快传输速率480Mbps，USB 3.0 –&gt; 5.0Gbps，USB 3.1 –&gt; 10Gbps。</h4><hr>
<h2 id="四：计算机软件系统："><a href="#四：计算机软件系统：" class="headerlink" title="四：计算机软件系统："></a>四：计算机软件系统：</h2><h4 id="emsp-1-计算机硬件能直接识别、执行的语言是机器语言。"><a href="#emsp-1-计算机硬件能直接识别、执行的语言是机器语言。" class="headerlink" title="&emsp;1.计算机硬件能直接识别、执行的语言是机器语言。"></a>&emsp;1.计算机硬件能直接识别、执行的语言是<u>机器语言</u>。</h4><h4 id="emsp-2-程序设计语言三类：机器语言、汇编语言、高级语言（VB、C、Java）。"><a href="#emsp-2-程序设计语言三类：机器语言、汇编语言、高级语言（VB、C、Java）。" class="headerlink" title="&emsp;2.程序设计语言三类：机器语言、汇编语言、高级语言（VB、C、Java）。"></a>&emsp;2.程序设计语言三类：机器语言、汇编语言、高级语言（VB、C、Java）。</h4><h4 id="emsp-3-操作系统：Liunx（开源）、Windows、Mac"><a href="#emsp-3-操作系统：Liunx（开源）、Windows、Mac" class="headerlink" title="&emsp;3.操作系统：Liunx（开源）、Windows、Mac"></a>&emsp;3.操作系统：Liunx（开源）、Windows、Mac</h4><h4 id="emsp-4-在软件开发中，需求分析阶段产生的主要文档是软件需求规格说明书，可以使用的工具DFD图。"><a href="#emsp-4-在软件开发中，需求分析阶段产生的主要文档是软件需求规格说明书，可以使用的工具DFD图。" class="headerlink" title="&emsp;4.在软件开发中，需求分析阶段产生的主要文档是软件需求规格说明书，可以使用的工具DFD图。"></a>&emsp;4.在软件开发中，需求分析阶段产生的主要文档是<u>软件需求规格说明书</u>，可以使用的工具<u>DFD图</u>。</h4><hr>
<h2 id="五：多媒体技术简介"><a href="#五：多媒体技术简介" class="headerlink" title="五：多媒体技术简介"></a>五：多媒体技术简介</h2><h4 id="emsp-1-音频数据量-字节B-采样时间-s-采样频率-Hz-量化位数-二进制位b-声道数-8"><a href="#emsp-1-音频数据量-字节B-采样时间-s-采样频率-Hz-量化位数-二进制位b-声道数-8" class="headerlink" title="&emsp;1.音频数据量(字节B)=采样时间(s)采样频率(Hz)量化位数(二进制位b)*声道数/8"></a>&emsp;1.音频数据量(字节B)=采样时间(s)<em>采样频率(Hz)</em>量化位数(二进制位b)*声道数/8</h4><h4 id="emsp-2-存储空间最大的声音文件格式是WAV波形文字；图形文件格式是Bmp。"><a href="#emsp-2-存储空间最大的声音文件格式是WAV波形文字；图形文件格式是Bmp。" class="headerlink" title="&emsp;2.存储空间最大的声音文件格式是WAV波形文字；图形文件格式是Bmp。"></a>&emsp;2.存储空间最大的声音文件格式是<u>WAV波形文字</u>；图形文件格式是<u>Bmp</u>。</h4><hr>
<h2 id="六：计算机病毒及防治"><a href="#六：计算机病毒及防治" class="headerlink" title="六：计算机病毒及防治"></a>六：计算机病毒及防治</h2><h4 id="emsp-1-先于或随着操作系统的系统文件装入内存储器，从而获取计算机特定控制权并进行传染和破坏的病毒是引导区型病毒。"><a href="#emsp-1-先于或随着操作系统的系统文件装入内存储器，从而获取计算机特定控制权并进行传染和破坏的病毒是引导区型病毒。" class="headerlink" title="&emsp;1.先于或随着操作系统的系统文件装入内存储器，从而获取计算机特定控制权并进行传染和破坏的病毒是引导区型病毒。"></a>&emsp;1.先于或随着操作系统的系统文件装入内存储器，从而获取计算机特定控制权并进行传染和破坏的病毒是<u>引导区型病毒</u>。</h4><h4 id="emsp-2-计算机病毒是一种具有繁殖能力的特殊程序。"><a href="#emsp-2-计算机病毒是一种具有繁殖能力的特殊程序。" class="headerlink" title="&emsp;2.计算机病毒是一种具有繁殖能力的特殊程序。"></a>&emsp;2.计算机病毒是一种具有繁殖能力的<u>特殊程序</u>。</h4><hr>
<h2 id="七：Internet基础及应用"><a href="#七：Internet基础及应用" class="headerlink" title="七：Internet基础及应用"></a>七：Internet基础及应用</h2><h4 id="emsp-1-计算机网络最突出的优点是实现资源共享和快速通信。"><a href="#emsp-1-计算机网络最突出的优点是实现资源共享和快速通信。" class="headerlink" title="&emsp;1.计算机网络最突出的优点是实现资源共享和快速通信。"></a>&emsp;1.计算机网络最突出的优点是<u>实现资源共享和快速通信</u>。</h4><h4 id="emsp-2-环形拓扑结构是将网络的各个节点通过中继器连接成一个闭合环路。"><a href="#emsp-2-环形拓扑结构是将网络的各个节点通过中继器连接成一个闭合环路。" class="headerlink" title="&emsp;2.环形拓扑结构是将网络的各个节点通过中继器连接成一个闭合环路。"></a>&emsp;2.<u>环形</u>拓扑结构是将网络的各个节点通过中继器连接成一个闭合环路。</h4><h4 id="emsp-3-以太网的拓扑结构总线型。"><a href="#emsp-3-以太网的拓扑结构总线型。" class="headerlink" title="&emsp;3.以太网的拓扑结构总线型。"></a>&emsp;3.以太网的拓扑结构<u>总线型</u>。</h4><h4 id="emsp-4-WiFi上网，拓扑结构为星形拓扑。"><a href="#emsp-4-WiFi上网，拓扑结构为星形拓扑。" class="headerlink" title="&emsp;4.WiFi上网，拓扑结构为星形拓扑。"></a>&emsp;4.WiFi上网，拓扑结构为<u>星形拓扑</u>。</h4><h4 id="emsp-5-计算机连接局域网，至少具有网卡。组建内部办公网络，需要路由器。"><a href="#emsp-5-计算机连接局域网，至少具有网卡。组建内部办公网络，需要路由器。" class="headerlink" title="&emsp;5.计算机连接局域网，至少具有网卡。组建内部办公网络，需要路由器。"></a>&emsp;5.计算机连接局域网，至少具有网卡。组建内部办公网络，需要<u>路由器</u>。</h4><h4 id="emsp-6-Internet完成从域名到IP地址或从IP地址到域名的转换服务的是DNS。"><a href="#emsp-6-Internet完成从域名到IP地址或从IP地址到域名的转换服务的是DNS。" class="headerlink" title="&emsp;6.Internet完成从域名到IP地址或从IP地址到域名的转换服务的是DNS。"></a>&emsp;6.Internet完成从域名到IP地址或从IP地址到域名的转换服务的是<u>DNS</u>。</h4><h4 id="emsp-7-IP地址规范：四段，每段范围（0-255）。"><a href="#emsp-7-IP地址规范：四段，每段范围（0-255）。" class="headerlink" title="&emsp;7.IP地址规范：四段，每段范围（0~255）。"></a>&emsp;7.IP地址规范：四段，每段范围（0~255）。</h4><h4 id="emsp-8-Internet环境中的防火墙建立在内部网络与外部网络的交叉点。"><a href="#emsp-8-Internet环境中的防火墙建立在内部网络与外部网络的交叉点。" class="headerlink" title="&emsp;8.Internet环境中的防火墙建立在内部网络与外部网络的交叉点。"></a>&emsp;8.Internet环境中的防火墙建立在内部网络与外部网络的交叉点。</h4><hr>
<h2 id="八：数据结构"><a href="#八：数据结构" class="headerlink" title="八：数据结构"></a>八：数据结构</h2><h4 id="emsp-1-栈先进后出（弹夹），队列先进先出（排队）。"><a href="#emsp-1-栈先进后出（弹夹），队列先进先出（排队）。" class="headerlink" title="&emsp;1.栈先进后出（弹夹），队列先进先出（排队）。"></a>&emsp;1.栈先进后出（弹夹），队列先进先出（排队）。</h4><h4 id="emsp-2-面向对象方法中，对象基本特点：标识唯一性、分类性、多态性、封装性、模块独立性。"><a href="#emsp-2-面向对象方法中，对象基本特点：标识唯一性、分类性、多态性、封装性、模块独立性。" class="headerlink" title="&emsp;2.面向对象方法中，对象基本特点：标识唯一性、分类性、多态性、封装性、模块独立性。"></a>&emsp;2.面向对象方法中，对象基本特点：标识唯一性、分类性、多态性、封装性、模块独立性。</h4><h4 id="emsp-3-算法的有穷性是指算法程序的运行时间是有限的。"><a href="#emsp-3-算法的有穷性是指算法程序的运行时间是有限的。" class="headerlink" title="&emsp;3.算法的有穷性是指算法程序的运行时间是有限的。"></a>&emsp;3.算法的有穷性是指算法程序的运行时间是有限的。</h4><h4 id="emsp-4-程序流程图中带有箭头的线段表示的是控制流。"><a href="#emsp-4-程序流程图中带有箭头的线段表示的是控制流。" class="headerlink" title="&emsp;4.程序流程图中带有箭头的线段表示的是控制流。"></a>&emsp;4.程序流程图中带有箭头的线段表示的是控制流。</h4><h4 id="emsp-5-链式存储结构既可以针对线性结构也可以针对非线性结构。"><a href="#emsp-5-链式存储结构既可以针对线性结构也可以针对非线性结构。" class="headerlink" title="&emsp;5.链式存储结构既可以针对线性结构也可以针对非线性结构。"></a>&emsp;5.链式存储结构既可以针对线性结构也可以针对非线性结构。</h4><h4 id="emsp-6-树中总结点数-不同度节点数目相加-度数-对应节点数和-1"><a href="#emsp-6-树中总结点数-不同度节点数目相加-度数-对应节点数和-1" class="headerlink" title="&emsp;6.树中总结点数=不同度节点数目相加=度数*对应节点数和+1"></a>&emsp;6.树中总结点数=不同度节点数目相加=度数*对应节点数和+1</h4><p><img src="/images/%E4%BA%8C%E7%BA%A7/tree.png" alt="Yoyou"></p>
<h4 id="emsp-7-任意二叉树中度为2的二叉树结点比度为0的少1。"><a href="#emsp-7-任意二叉树中度为2的二叉树结点比度为0的少1。" class="headerlink" title="&emsp;7.任意二叉树中度为2的二叉树结点比度为0的少1。"></a>&emsp;7.任意二叉树中度为2的二叉树结点比度为0的少1。</h4><h4 id="emsp-8-深度为k的二叉树最多有2-k-1个结点。二叉树第m层最多有2-m-1-个结点。"><a href="#emsp-8-深度为k的二叉树最多有2-k-1个结点。二叉树第m层最多有2-m-1-个结点。" class="headerlink" title="&emsp;8.深度为k的二叉树最多有2^k-1个结点。二叉树第m层最多有2^(m-1)个结点。"></a>&emsp;8.深度为k的二叉树最多有2^k-1个结点。二叉树第m层最多有2^(m-1)个结点。</h4><h4 id="emsp-9-满二叉树每一层都有两个子节点。"><a href="#emsp-9-满二叉树每一层都有两个子节点。" class="headerlink" title="&emsp;9.满二叉树每一层都有两个子节点。"></a>&emsp;9.满二叉树每一层都有两个子节点。</h4><h6 align="right">知识点仅结合资料整理而成，或有疏漏，仅供参考</h6>
]]></content>
      <categories>
        <category>其它</category>
        <category>计算机二级</category>
      </categories>
      <tags>
        <tag>计算机二级</tag>
        <tag>MS Office</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB连接报错shutting down with code:100</title>
    <url>/2019/11/02/MongoDB%E8%BF%9E%E6%8E%A5%E6%8A%A5%E9%94%99%E2%80%A6%E2%80%A6code-100/</url>
    <content><![CDATA[<h3 id="连接MongoDB时，报错如下："><a href="#连接MongoDB时，报错如下：" class="headerlink" title="连接MongoDB时，报错如下："></a>连接MongoDB时，报错如下：</h3><h4 id="2018-07-20T22-42-08-645-0800-I-CONTROL-initandlisten-now-exiting"><a href="#2018-07-20T22-42-08-645-0800-I-CONTROL-initandlisten-now-exiting" class="headerlink" title="2018-07-20T22:42:08.645+0800 I CONTROL  [initandlisten] now exiting"></a>2018-07-20T22:42:08.645+0800 I CONTROL  [initandlisten] now exiting</h4><h4 id="2018-07-20T22-42-08-645-0800-I-CONTROL-initandlisten-shutting-down-with-code-100"><a href="#2018-07-20T22-42-08-645-0800-I-CONTROL-initandlisten-shutting-down-with-code-100" class="headerlink" title="2018-07-20T22:42:08.645+0800 I CONTROL  [initandlisten] shutting down with code:100"></a>2018-07-20T22:42:08.645+0800 I CONTROL  [initandlisten] shutting down with code:100</h4><a id="more"></a>
<h3 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h3><h4 id="mongodb非正常关闭"><a href="#mongodb非正常关闭" class="headerlink" title="mongodb非正常关闭"></a>mongodb非正常关闭</h4><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><h4 id="删除db目录下的mongod-lock文件即可"><a href="#删除db目录下的mongod-lock文件即可" class="headerlink" title="删除db目录下的mongod.lock文件即可."></a>删除db目录下的mongod.lock文件即可.</h4>]]></content>
      <categories>
        <category>数据库</category>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL名字包含特殊符号的库无法创建或删除</title>
    <url>/2019/11/02/MySQL%E5%90%8D%E5%AD%97%E5%8C%85%E5%90%AB%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%BA%93%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E6%88%96%E5%88%A0%E9%99%A4/</url>
    <content><![CDATA[<p><img src="/images/hexo/3.png" alt="Yoyou"></p>
<a id="more"></a>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="库名用-Esc下的键-符号包裹，效果如下"><a href="#库名用-Esc下的键-符号包裹，效果如下" class="headerlink" title="库名用`(Esc下的键)符号包裹，效果如下"></a>库名用`(Esc下的键)符号包裹，效果如下</h4><p><img src="/images/hexo/4.png" alt="Yoyou"></p>
]]></content>
      <categories>
        <category>数据库</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo+Github搭建属于自己的个人博客</title>
    <url>/2019/11/01/%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="使用Hexo-Github搭建属于自己的个人博客"><a href="#使用Hexo-Github搭建属于自己的个人博客" class="headerlink" title="使用Hexo+Github搭建属于自己的个人博客"></a>使用Hexo+Github搭建属于自己的个人博客</h1><h2 id="（一）前期准备"><a href="#（一）前期准备" class="headerlink" title="（一）前期准备"></a>（一）前期准备</h2><h4 id="emsp-emsp-Node-js（node-v，-npm-v-检测安装）"><a href="#emsp-emsp-Node-js（node-v，-npm-v-检测安装）" class="headerlink" title="&emsp;&emsp;Node.js（node -v， npm -v 检测安装）"></a>&emsp;&emsp;Node.js（node -v， npm -v 检测安装）</h4><h4 id="emsp-emsp-Git"><a href="#emsp-emsp-Git" class="headerlink" title="&emsp;&emsp;Git"></a>&emsp;&emsp;Git</h4><h4 id="emsp-emsp-sublime（文本编辑器仅供参考，凭个人喜好选择）"><a href="#emsp-emsp-sublime（文本编辑器仅供参考，凭个人喜好选择）" class="headerlink" title="&emsp;&emsp;sublime（文本编辑器仅供参考，凭个人喜好选择）"></a>&emsp;&emsp;sublime（文本编辑器仅供参考，凭个人喜好选择）</h4><h4 id="emsp-emsp-注册GitHub，新建一个仓库，仓库名以（xxx-github-io）为标准"><a href="#emsp-emsp-注册GitHub，新建一个仓库，仓库名以（xxx-github-io）为标准" class="headerlink" title="&emsp;&emsp;注册GitHub，新建一个仓库，仓库名以（xxx.github.io）为标准"></a>&emsp;&emsp;注册GitHub，新建一个仓库，仓库名以（xxx.github.io）为标准</h4><a id="more"></a>
<h2 id="（二）安装Hexo"><a href="#（二）安装Hexo" class="headerlink" title="（二）安装Hexo"></a>（二）安装Hexo</h2><h4 id="emsp-emsp-在自己喜欢的目录下新建一个放置博客文件夹的目录"><a href="#emsp-emsp-在自己喜欢的目录下新建一个放置博客文件夹的目录" class="headerlink" title="&emsp;&emsp;在自己喜欢的目录下新建一个放置博客文件夹的目录"></a>&emsp;&emsp;在自己喜欢的目录下新建一个放置博客文件夹的目录</h4><h4 id="emsp-emsp-使用Git进入到此目录，执行以下命令"><a href="#emsp-emsp-使用Git进入到此目录，执行以下命令" class="headerlink" title="&emsp;&emsp;使用Git进入到此目录，执行以下命令"></a>&emsp;&emsp;使用Git进入到此目录，执行以下命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h2 id="（三）初始化博客"><a href="#（三）初始化博客" class="headerlink" title="（三）初始化博客"></a>（三）初始化博客</h2><h4 id="emsp-emsp-初始化"><a href="#emsp-emsp-初始化" class="headerlink" title="&emsp;&emsp;初始化"></a>&emsp;&emsp;初始化</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm init 博客名</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-进入到新创建的博客目录下，安装相关的依赖"><a href="#emsp-emsp-进入到新创建的博客目录下，安装相关的依赖" class="headerlink" title="&emsp;&emsp;进入到新创建的博客目录下，安装相关的依赖"></a>&emsp;&emsp;进入到新创建的博客目录下，安装相关的依赖</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-此时已经创建完毕，可以输入以下命令在网页上进行预览"><a href="#emsp-emsp-此时已经创建完毕，可以输入以下命令在网页上进行预览" class="headerlink" title="&emsp;&emsp;此时已经创建完毕，可以输入以下命令在网页上进行预览"></a>&emsp;&emsp;此时已经创建完毕，可以输入以下命令在网页上进行预览</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s -p未被占用端口号 (ctral+c结束)</span><br></pre></td></tr></table></figure>

<h2 id="（四）部署到GitHub"><a href="#（四）部署到GitHub" class="headerlink" title="（四）部署到GitHub"></a>（四）部署到GitHub</h2><h4 id="emsp-emsp-安装hexo-deployer-git-插件"><a href="#emsp-emsp-安装hexo-deployer-git-插件" class="headerlink" title="&emsp;&emsp;安装hexo-deployer-git 插件"></a>&emsp;&emsp;安装hexo-deployer-git 插件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-使用sublime打开博客文件夹，找到-config-yml文件，修改以下内容"><a href="#emsp-emsp-使用sublime打开博客文件夹，找到-config-yml文件，修改以下内容" class="headerlink" title="&emsp;&emsp;使用sublime打开博客文件夹，找到_config.yml文件，修改以下内容"></a>&emsp;&emsp;使用sublime打开博客文件夹，找到_config.yml文件，修改以下内容</h4><p><img src="/images/hexo/1.png" alt="Yoyou"><br><img src="/images/hexo/2.png" alt="Yoyou"></p>
<h4 id="emsp-emsp-清理"><a href="#emsp-emsp-清理" class="headerlink" title="&emsp;&emsp;清理"></a>&emsp;&emsp;清理</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-生成"><a href="#emsp-emsp-生成" class="headerlink" title="&emsp;&emsp;生成"></a>&emsp;&emsp;生成</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-提交"><a href="#emsp-emsp-提交" class="headerlink" title="&emsp;&emsp;提交"></a>&emsp;&emsp;提交</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>
<h4 id="emsp-emsp-配置完成，即可拥有自己的博客网址-xxx-github-io"><a href="#emsp-emsp-配置完成，即可拥有自己的博客网址-xxx-github-io" class="headerlink" title="&emsp;&emsp;配置完成，即可拥有自己的博客网址(xxx.github.io)"></a>&emsp;&emsp;配置完成，即可拥有自己的博客网址(xxx.github.io)</h4>]]></content>
      <categories>
        <category>其它</category>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/10/31/hello-world/</url>
    <content><![CDATA[<h2 id="Welcome-to-My-Blog"><a href="#Welcome-to-My-Blog" class="headerlink" title="Welcome to My Blog!!"></a>Welcome to My Blog!!</h2><h4 id="Zhengyoyou记录平时遇到的问题"><a href="#Zhengyoyou记录平时遇到的问题" class="headerlink" title="Zhengyoyou记录平时遇到的问题"></a>Zhengyoyou记录平时遇到的问题</h4><a id="more"></a>


<!--
## Hello Hexo

## Quick Start

### Create a new post

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a><br>–&gt;</p>
]]></content>
  </entry>
</search>
